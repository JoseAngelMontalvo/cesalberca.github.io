(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["article~articles~home~talks"],{"1af6":function(e,t,n){var r=n("63b6");r(r.S,"Array",{isArray:n("9003")})},"1c4c":function(e,t,n){"use strict";var r=n("9b43"),o=n("5ca1"),a=n("4bf8"),i=n("1fa8"),c=n("33a4"),s=n("9def"),l=n("f1ae"),u=n("27ee");o(o.S+o.F*!n("5cc5")(function(e){Array.from(e)}),"Array",{from:function(e){var t,n,o,d,p=a(e),m="function"==typeof this?this:Array,f=arguments.length,h=f>1?arguments[1]:void 0,g=void 0!==h,y=0,v=u(p);if(g&&(h=r(h,f>2?arguments[2]:void 0,2)),void 0==v||m==Array&&c(v))for(t=s(p.length),n=new m(t);t>y;y++)l(n,y,g?h(p[y],y):p[y]);else for(d=v.call(p),n=new m;!(o=d.next()).done;y++)l(n,y,g?i(d,h,[o.value,y],!0):o.value);return n.length=y,n}})},"20fd":function(e,t,n){"use strict";var r=n("d9f6"),o=n("aebd");e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},"24c5":function(e,t,n){"use strict";var r,o,a,i,c=n("b8e3"),s=n("e53d"),l=n("d864"),u=n("40c3"),d=n("63b6"),p=n("f772"),m=n("79aa"),f=n("1173"),h=n("a22a"),g=n("f201"),y=n("4178").set,v=n("aba2")(),w=n("656e"),b=n("4439"),x=n("bc13"),A=n("cd78"),L="Promise",C=s.TypeError,k=s.process,T=k&&k.versions,S=T&&T.v8||"",O=s[L],_="process"==u(k),R=function(){},j=o=w.f,I=!!function(){try{var e=O.resolve(1),t=(e.constructor={})[n("5168")("species")]=function(e){e(R,R)};return(_||"function"==typeof PromiseRejectionEvent)&&e.then(R)instanceof t&&0!==S.indexOf("6.6")&&-1===x.indexOf("Chrome/66")}catch(r){}}(),D=function(e){var t;return!(!p(e)||"function"!=typeof(t=e.then))&&t},E=function(e,t){if(!e._n){e._n=!0;var n=e._c;v(function(){var r=e._v,o=1==e._s,a=0,i=function(t){var n,a,i,c=o?t.ok:t.fail,s=t.resolve,l=t.reject,u=t.domain;try{c?(o||(2==e._h&&U(e),e._h=1),!0===c?n=r:(u&&u.enter(),n=c(r),u&&(u.exit(),i=!0)),n===t.promise?l(C("Promise-chain cycle")):(a=D(n))?a.call(n,s,l):s(n)):l(r)}catch(d){u&&!i&&u.exit(),l(d)}};while(n.length>a)i(n[a++]);e._c=[],e._n=!1,t&&!e._h&&F(e)})}},F=function(e){y.call(s,function(){var t,n,r,o=e._v,a=P(e);if(a&&(t=b(function(){_?k.emit("unhandledRejection",o,e):(n=s.onunhandledrejection)?n({promise:e,reason:o}):(r=s.console)&&r.error&&r.error("Unhandled promise rejection",o)}),e._h=_||P(e)?2:1),e._a=void 0,a&&t.e)throw t.v})},P=function(e){return 1!==e._h&&0===(e._a||e._c).length},U=function(e){y.call(s,function(){var t;_?k.emit("rejectionHandled",e):(t=s.onrejectionhandled)&&t({promise:e,reason:e._v})})},N=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),E(t,!0))},G=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw C("Promise can't be resolved itself");(t=D(e))?v(function(){var r={_w:n,_d:!1};try{t.call(e,l(G,r,1),l(N,r,1))}catch(o){N.call(r,o)}}):(n._v=e,n._s=1,E(n,!1))}catch(r){N.call({_w:n,_d:!1},r)}}};I||(O=function(e){f(this,O,L,"_h"),m(e),r.call(this);try{e(l(G,this,1),l(N,this,1))}catch(t){N.call(this,t)}},r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},r.prototype=n("5c95")(O.prototype,{then:function(e,t){var n=j(g(this,O));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=_?k.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&E(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new r;this.promise=e,this.resolve=l(G,e,1),this.reject=l(N,e,1)},w.f=j=function(e){return e===O||e===i?new a(e):o(e)}),d(d.G+d.W+d.F*!I,{Promise:O}),n("45f2")(O,L),n("4c95")(L),i=n("584a")[L],d(d.S+d.F*!I,L,{reject:function(e){var t=j(this),n=t.reject;return n(e),t.promise}}),d(d.S+d.F*(c||!I),L,{resolve:function(e){return A(c&&this===i?O:this,e)}}),d(d.S+d.F*!(I&&n("4ee1")(function(e){O.all(e)["catch"](R)})),L,{all:function(e){var t=this,n=j(t),r=n.resolve,o=n.reject,a=b(function(){var n=[],a=0,i=1;h(e,!1,function(e){var c=a++,s=!1;n.push(void 0),i++,t.resolve(e).then(function(e){s||(s=!0,n[c]=e,--i||r(n))},o)}),--i||r(n)});return a.e&&o(a.v),n.promise},race:function(e){var t=this,n=j(t),r=n.reject,o=b(function(){h(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return o.e&&r(o.v),n.promise}})},"2b3a":function(e,t){e.exports={body:"Vue seems to be the framework of the moment but... ¿how easy is to do testing, dependency injection, separation of concerns, compositions and so many other good practices? In this talk we'll see how we can take advantage of Vue in order to make our Software more robust, easy to test and easy to mantain.\n",html:"<p>Vue seems to be the framework of the moment but... ¿how easy is to do testing, dependency injection, separation of concerns, compositions and so many other good practices? In this talk we'll see how we can take advantage of Vue in order to make our Software more robust, easy to test and easy to mantain.</p>\n",attributes:{title:"Good Practices with Vue",length:40,difficulty:"Intermediate",language:"en",topics:["Vue","JavaScript","TypeScript"]}}},"309a":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("d225"),o=n("b0b4"),a=n("f798"),i=n("c655"),c=function(){function e(){Object(r["a"])(this,e)}return Object(o["a"])(e,[{key:"toDifficulty",value:function(e){switch(e){case"Advanced":return i["a"].ADVANCED;case"Intermediate":return i["a"].INTERMEDIATE;case"Beginner":return i["a"].EASY;default:throw new a["b"]("String ".concat(e," could not be mapped to a difficulty"))}}},{key:"toString",value:function(e){switch(e){case i["a"].ADVANCED:return"talks_talkDifficultyAdvanced";case i["a"].INTERMEDIATE:return"talks_talkDifficultyIntermediate";case i["a"].EASY:return"talks_talkDifficultyEasy"}}}],[{key:"create",value:function(){return new e}}]),e}()},3846:function(e,t,n){n("9e1e")&&"g"!=/./g.flags&&n("86cc").f(RegExp.prototype,"flags",{configurable:!0,get:n("0bfb")})},"391e":function(e,t){e.exports={body:"Casos de Uso y comandos. Cómo.\n\n\x3c!--more--\x3e\n\nEl [patrón comando](https://sourcemaking.com/design_patterns/command) nos ayuda a encapsular peticiones para realizar ciertas operaciones como logs, colas y filtrado.\n\nComenzamos con la interfaz:\n\n```typescript\nexport interface Command<T> {\n    execute(): Promise<T>\n}\n```\n\nAhora podremos ver un comando específico, por ejemplo el que se usa para cargar este mismo artículo.\n\n```typescript\nimport { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale, Translator } from '../../domain/language'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { FileLoader } from '../../infraestructure/FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class GetArticle implements Command<Article> {\n    private constructor(\n        private readonly articlesRepository: ArticlesRepository,\n        private readonly id: Id,\n        private readonly locale: Locale\n    ) {}\n\n    public async execute(): Promise<Article> {\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\n    }\n\n    public static create(context: { id: Id; locale: Locale }) {\n        return new GetArticle(\n            new ArticlesFileRepository(\n                FileLoader.create(),\n                TranslationService.create(Translator.create())\n            ),\n            context.id,\n            context.locale\n        )\n    }\n}\n```\n\nEste comando es responsable de obtener cierto artículo usando un [repositorio](http://shawnmc.cool/the-repository-pattern), dónde y cómo lo haga es algo que no nos acontece a nosotros, ya que es responsabilidad de otra clase.\n\nEl comando representa un [Caso de Uso](https://en.wikipedia.org/wiki/Use_case) de mi aplicación. Ahora mismo solamente necesito recoger el artículo del repositorio pero podría desarrollar una nueva funcionalidad donde se podría gestionar el si el usuario ha leído el artículo ya o si el usuario es PRO y por tanto puede leer todos los artículos en vez de unos pocos.\n\n¿Quién construye el comando? Pues quien lo use:\n\n```typescript\nconst article = await GetArticle.create({\n    id: 'use-cases-and-commands',\n    locale: Locale.EN\n}).execute()\n```\n\nEstoy usando [inversion de control](https://en.wikipedia.org/wiki/Inversion_of_control) para proveer de las dependencias necesarias para que el case de uso GetArticle funcione. Esto lo hago mediante un función constructura (si fuese muy complejo construir este caso de uso nos crearíamos una [factoría](https://sourcemaking.com/design_patterns/factory_method)):\n\n```typescript\npublic static create(context: { id: Id; locale: Locale }) {\n    return new GetArticle(\n        new ArticlesFileRepository(\n          FileLoader.create(),\n          TranslationService.create(Translator.create())\n        ),\n        context.id,\n        context.locale\n    )\n}\n```\n\nEn este caso estoy pasando de una abstracción (ArticlesRepository) a una concreción (ArticlesFileRepository). Si mañana decido que mis artículos vendrán via API únicamente tendré que cambiar el método factoría.\n\nLo que también es interesante de los comando es que son fáciles de extender. Por ejemplo podemos dejar una traza cada vez que un comando sea ejecutado usando el [patrón decorador](https://sourcemaking.com/design_patterns/decorator):\n\n```typescript\nimport { Command } from './Command'\nimport { Logger } from './Logger'\n\nexport class LoggerCommandDecorator<T> implements Command<T> {\n    public constructor(\n        private readonly decoratedCommand: Command<T>,\n        private readonly logger: Logger\n    ) {}\n\n    public execute(): Promise<T> {\n        this.logger.log(\n            (this.decoratedCommand as Object).constructor.name +\n                ' - ' +\n                Object.getOwnPropertyNames(this.decoratedCommand)\n        )\n        return this.decoratedCommand.execute()\n    }\n}\n```\n\nDespués, usando un `UserCaseDecorator` especifico qué decoradores quiero aplicar para **todos mis casos de uso**:\n\n```typescript\nimport { Command } from '../../infraestructure/Command'\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\nimport { Logger } from '../../infraestructure/Logger'\n\nexport class UseCaseDecorator {\n    private static readonly logger = Logger.create({\n        // eslint-disable-next-line\n        stdout: { error: console.error, info: console.log, warn: console.warn }\n    })\n\n    public static decorate<T>(command: Command<T>) {\n        return new LoggerCommandDecorator<T>(command, UseCaseDecorator.logger)\n    }\n}\n```\n\nY después en cada Caso de Uso usamos el `UseCaseDecorator` de esta forma:\n\n```typescript\nimport { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale, Translator } from '../../domain/language'\nimport { UseCaseDecorator } from './UseCaseDecorator'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { FileLoader } from '../../infraestructure/FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class GetArticle implements Command<Article> {\n    private constructor(\n        private readonly articlesRepository: ArticlesRepository,\n        private readonly id: Id,\n        private readonly locale: Locale\n    ) {}\n\n    public async execute(): Promise<Article> {\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\n    }\n\n    public static create(context: { id: Id; locale: Locale }) {\n        return UseCaseDecorator.decorate(\n            new GetArticle(\n                new ArticlesFileRepository(\n                    FileLoader.create(),\n                    TranslationService.create(Translator.create())\n                ),\n                context.id,\n                context.locale\n            )\n        )\n    }\n}\n```\n\nY podríamos crear todos los decaradores que se nos ocurran y usando composición podemos dar más y más comportamiento a nuestros comandos.\n",html:"<p>Casos de Uso y comandos. Cómo.</p>\n\x3c!--more--\x3e\n<p>El <a href=\"https://sourcemaking.com/design_patterns/command\">patrón comando</a> nos ayuda a encapsular peticiones para realizar ciertas operaciones como logs, colas y filtrado.</p>\n<p>Comenzamos con la interfaz:</p>\n<pre><code class=\"language-typescript\">export interface Command&lt;T&gt; {\n    execute(): Promise&lt;T&gt;\n}\n</code></pre>\n<p>Ahora podremos ver un comando específico, por ejemplo el que se usa para cargar este mismo artículo.</p>\n<pre><code class=\"language-typescript\">import { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale, Translator } from '../../domain/language'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { FileLoader } from '../../infraestructure/FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class GetArticle implements Command&lt;Article&gt; {\n    private constructor(\n        private readonly articlesRepository: ArticlesRepository,\n        private readonly id: Id,\n        private readonly locale: Locale\n    ) {}\n\n    public async execute(): Promise&lt;Article&gt; {\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\n    }\n\n    public static create(context: { id: Id; locale: Locale }) {\n        return new GetArticle(\n            new ArticlesFileRepository(\n                FileLoader.create(),\n                TranslationService.create(Translator.create())\n            ),\n            context.id,\n            context.locale\n        )\n    }\n}\n</code></pre>\n<p>Este comando es responsable de obtener cierto artículo usando un <a href=\"http://shawnmc.cool/the-repository-pattern\">repositorio</a>, dónde y cómo lo haga es algo que no nos acontece a nosotros, ya que es responsabilidad de otra clase.</p>\n<p>El comando representa un <a href=\"https://en.wikipedia.org/wiki/Use_case\">Caso de Uso</a> de mi aplicación. Ahora mismo solamente necesito recoger el artículo del repositorio pero podría desarrollar una nueva funcionalidad donde se podría gestionar el si el usuario ha leído el artículo ya o si el usuario es PRO y por tanto puede leer todos los artículos en vez de unos pocos.</p>\n<p>¿Quién construye el comando? Pues quien lo use:</p>\n<pre><code class=\"language-typescript\">const article = await GetArticle.create({\n    id: 'use-cases-and-commands',\n    locale: Locale.EN\n}).execute()\n</code></pre>\n<p>Estoy usando <a href=\"https://en.wikipedia.org/wiki/Inversion_of_control\">inversion de control</a> para proveer de las dependencias necesarias para que el case de uso GetArticle funcione. Esto lo hago mediante un función constructura (si fuese muy complejo construir este caso de uso nos crearíamos una <a href=\"https://sourcemaking.com/design_patterns/factory_method\">factoría</a>):</p>\n<pre><code class=\"language-typescript\">public static create(context: { id: Id; locale: Locale }) {\n    return new GetArticle(\n        new ArticlesFileRepository(\n          FileLoader.create(),\n          TranslationService.create(Translator.create())\n        ),\n        context.id,\n        context.locale\n    )\n}\n</code></pre>\n<p>En este caso estoy pasando de una abstracción (ArticlesRepository) a una concreción (ArticlesFileRepository). Si mañana decido que mis artículos vendrán via API únicamente tendré que cambiar el método factoría.</p>\n<p>Lo que también es interesante de los comando es que son fáciles de extender. Por ejemplo podemos dejar una traza cada vez que un comando sea ejecutado usando el <a href=\"https://sourcemaking.com/design_patterns/decorator\">patrón decorador</a>:</p>\n<pre><code class=\"language-typescript\">import { Command } from './Command'\nimport { Logger } from './Logger'\n\nexport class LoggerCommandDecorator&lt;T&gt; implements Command&lt;T&gt; {\n    public constructor(\n        private readonly decoratedCommand: Command&lt;T&gt;,\n        private readonly logger: Logger\n    ) {}\n\n    public execute(): Promise&lt;T&gt; {\n        this.logger.log(\n            (this.decoratedCommand as Object).constructor.name +\n                ' - ' +\n                Object.getOwnPropertyNames(this.decoratedCommand)\n        )\n        return this.decoratedCommand.execute()\n    }\n}\n</code></pre>\n<p>Después, usando un <code>UserCaseDecorator</code> especifico qué decoradores quiero aplicar para <strong>todos mis casos de uso</strong>:</p>\n<pre><code class=\"language-typescript\">import { Command } from '../../infraestructure/Command'\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\nimport { Logger } from '../../infraestructure/Logger'\n\nexport class UseCaseDecorator {\n    private static readonly logger = Logger.create({\n        // eslint-disable-next-line\n        stdout: { error: console.error, info: console.log, warn: console.warn }\n    })\n\n    public static decorate&lt;T&gt;(command: Command&lt;T&gt;) {\n        return new LoggerCommandDecorator&lt;T&gt;(command, UseCaseDecorator.logger)\n    }\n}\n</code></pre>\n<p>Y después en cada Caso de Uso usamos el <code>UseCaseDecorator</code> de esta forma:</p>\n<pre><code class=\"language-typescript\">import { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale, Translator } from '../../domain/language'\nimport { UseCaseDecorator } from './UseCaseDecorator'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { FileLoader } from '../../infraestructure/FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class GetArticle implements Command&lt;Article&gt; {\n    private constructor(\n        private readonly articlesRepository: ArticlesRepository,\n        private readonly id: Id,\n        private readonly locale: Locale\n    ) {}\n\n    public async execute(): Promise&lt;Article&gt; {\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\n    }\n\n    public static create(context: { id: Id; locale: Locale }) {\n        return UseCaseDecorator.decorate(\n            new GetArticle(\n                new ArticlesFileRepository(\n                    FileLoader.create(),\n                    TranslationService.create(Translator.create())\n                ),\n                context.id,\n                context.locale\n            )\n        )\n    }\n}\n</code></pre>\n<p>Y podríamos crear todos los decaradores que se nos ocurran y usando composición podemos dar más y más comportamiento a nuestros comandos.</p>\n",attributes:{title:"Casos de Uso y el patrón Comando",date:"2019-04-17T00:00:00.000Z",locale:"es"}}},"3b8d":function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("795b"),o=n.n(r);function a(e,t,n,r,a,i,c){try{var s=e[i](c),l=s.value}catch(u){return void n(u)}s.done?t(l):o.a.resolve(l).then(r,a)}function i(e){return function(){var t=this,n=arguments;return new o.a(function(r,o){var i=e.apply(t,n);function c(e){a(i,r,o,c,s,"next",e)}function s(e){a(i,r,o,c,s,"throw",e)}c(void 0)})}}},"3c11":function(e,t,n){"use strict";var r=n("63b6"),o=n("584a"),a=n("e53d"),i=n("f201"),c=n("cd78");r(r.P+r.R,"Promise",{finally:function(e){var t=i(this,o.Promise||a.Promise),n="function"==typeof e;return this.then(n?function(n){return c(t,e()).then(function(){return n})}:e,n?function(n){return c(t,e()).then(function(){throw n})}:e)}})},4178:function(e,t,n){var r,o,a,i=n("d864"),c=n("3024"),s=n("32fc"),l=n("1ec9"),u=n("e53d"),d=u.process,p=u.setImmediate,m=u.clearImmediate,f=u.MessageChannel,h=u.Dispatch,g=0,y={},v="onreadystatechange",w=function(){var e=+this;if(y.hasOwnProperty(e)){var t=y[e];delete y[e],t()}},b=function(e){w.call(e.data)};p&&m||(p=function(e){var t=[],n=1;while(arguments.length>n)t.push(arguments[n++]);return y[++g]=function(){c("function"==typeof e?e:Function(e),t)},r(g),g},m=function(e){delete y[e]},"process"==n("6b4c")(d)?r=function(e){d.nextTick(i(w,e,1))}:h&&h.now?r=function(e){h.now(i(w,e,1))}:f?(o=new f,a=o.port2,o.port1.onmessage=b,r=i(a.postMessage,a,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(r=function(e){u.postMessage(e+"","*")},u.addEventListener("message",b,!1)):r=v in l("script")?function(e){s.appendChild(l("script"))[v]=function(){s.removeChild(this),w.call(e)}}:function(e){setTimeout(i(w,e,1),0)}),e.exports={set:p,clear:m}},"43fc":function(e,t,n){"use strict";var r=n("63b6"),o=n("656e"),a=n("4439");r(r.S,"Promise",{try:function(e){var t=o.f(this),n=a(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},4439:function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(t){return{e:!0,v:t}}}},"478c":function(e,t,n){var r={"./en/advanced-javascript-patterns.md":["892f"],"./en/good-practices-vue.md":["2b3a"],"./en/how-to-make-beautiful-software-again.md":["8de8"],"./en/inversion-of-control.md":["8ae8"],"./en/typescript-for-javascripters.md":["670f"],"./es/good-practices-vue.md":["d4ad"]};function o(e){var t=r[e];return t?Promise.all(t.slice(1).map(n.e)).then(function(){var e=t[0];return n.t(e,7)}):Promise.resolve().then(function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}o.keys=function(){return Object.keys(r)},o.id="478c",e.exports=o},"4ee1":function(e,t,n){var r=n("5168")("iterator"),o=!1;try{var a=[7][r]();a["return"]=function(){o=!0},Array.from(a,function(){throw 2})}catch(i){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var a=[7],c=a[r]();c.next=function(){return{done:n=!0}},a[r]=function(){return c},e(a)}catch(i){}return n}},"4f7f":function(e,t,n){"use strict";var r=n("c26b"),o=n("b39a"),a="Set";e.exports=n("e0b8")(a,function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return r.def(o(this,a),e=0===e?0:e,e)}},r)},5296:function(e,t,n){var r={"./good-practices-vue.md":"d4ad"};function o(e){var t=a(e);return n(t)}function a(e){var t=r[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id="5296"},"549b":function(e,t,n){"use strict";var r=n("d864"),o=n("63b6"),a=n("241e"),i=n("b0dc"),c=n("3702"),s=n("b447"),l=n("20fd"),u=n("7cd6");o(o.S+o.F*!n("4ee1")(function(e){Array.from(e)}),"Array",{from:function(e){var t,n,o,d,p=a(e),m="function"==typeof this?this:Array,f=arguments.length,h=f>1?arguments[1]:void 0,g=void 0!==h,y=0,v=u(p);if(g&&(h=r(h,f>2?arguments[2]:void 0,2)),void 0==v||m==Array&&c(v))for(t=s(p.length),n=new m(t);t>y;y++)l(n,y,g?h(p[y],y):p[y]);else for(d=v.call(p),n=new m;!(o=d.next()).done;y++)l(n,y,g?i(d,h,[o.value,y],!0):o.value);return n.length=y,n}})},"54a1":function(e,t,n){n("6c1c"),n("1654"),e.exports=n("95d5")},"656e":function(e,t,n){"use strict";var r=n("79aa");function o(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r}),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new o(e)}},"670f":function(e,t){e.exports={body:"When backend people hear JavaScript, they shudder. When frontend people hear TypeScript, they shudder. Why can't we have the best of both worlds? This talk will heavily demistify the usage of TypeScript and we will show how can we —within a JavaScript context— apply TypeScript to get the best development experience. We'll learn what a type system has to offer us and how we can prevent up to 15% bugs in production. And did I tell you about smart autocompletion when coding? How about capturing errors in compilation time instead of runtime? Better null and undefined handling? Yes, it's possible!\n",html:"<p>When backend people hear JavaScript, they shudder. When frontend people hear TypeScript, they shudder. Why can't we have the best of both worlds? This talk will heavily demistify the usage of TypeScript and we will show how can we —within a JavaScript context— apply TypeScript to get the best development experience. We'll learn what a type system has to offer us and how we can prevent up to 15% bugs in production. And did I tell you about smart autocompletion when coding? How about capturing errors in compilation time instead of runtime? Better null and undefined handling? Yes, it's possible!</p>\n",attributes:{title:"TypeScript for JavaScripters: Less typing and more Typing!",length:45,difficulty:"Beginner",language:"en",topics:["TypeScript","JavaScript"]}}},"696e":function(e,t,n){n("c207"),n("1654"),n("6c1c"),n("24c5"),n("3c11"),n("43fc"),e.exports=n("584a").Promise},"6b54":function(e,t,n){"use strict";n("3846");var r=n("cb7c"),o=n("0bfb"),a=n("9e1e"),i="toString",c=/./[i],s=function(e){n("2aba")(RegExp.prototype,i,e,!0)};n("79e5")(function(){return"/a/b"!=c.call({source:"a",flags:"b"})})?s(function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!a&&e instanceof RegExp?o.call(e):void 0)}):c.name!=i&&s(function(){return c.call(this)})},"774e":function(e,t,n){e.exports=n("d2d5")},"795b":function(e,t,n){e.exports=n("696e")},"7f7f":function(e,t,n){var r=n("86cc").f,o=Function.prototype,a=/^\s*function ([^ (]*)/,i="name";i in o||n("9e1e")&&r(o,i,{configurable:!0,get:function(){try{return(""+this).match(a)[1]}catch(e){return""}}})},"892f":function(e,t){e.exports={body:"When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of **design patterns** applied to JavaScript, looking through some of the cutting edge properties of ES6 such as **Proxies** and **default function parameter expressions**, dealing with **objects** and even some examples of **functional programming**. This talk is not allowed for cardiacs.\n",html:"<p>When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of <strong>design patterns</strong> applied to JavaScript, looking through some of the cutting edge properties of ES6 such as <strong>Proxies</strong> and <strong>default function parameter expressions</strong>, dealing with <strong>objects</strong> and even some examples of <strong>functional programming</strong>. This talk is not allowed for cardiacs.</p>\n",attributes:{title:"Advanced JavaScript Patterns",length:45,difficulty:"Advanced",language:"en",topics:["Proxies","JavaScript"]}}},"898a":function(e,t,n){var r={"./use-cases-and-commands.md":"391e"};function o(e){var t=a(e);return n(t)}function a(e){var t=r[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id="898a"},"8ae8":function(e,t){e.exports={body:"Inversion of Control (IoC) is a powerful mechanism popularized by **Robert C. Martin** and **Martin Fowler** which makes your code more **reusable**, **extensible** and **testable**. It's tied with one of the **SOLID** principles and following it will give you back **absolute control over your code**.\n",html:"<p>Inversion of Control (IoC) is a powerful mechanism popularized by <strong>Robert C. Martin</strong> and <strong>Martin Fowler</strong> which makes your code more <strong>reusable</strong>, <strong>extensible</strong> and <strong>testable</strong>. It's tied with one of the <strong>SOLID</strong> principles and following it will give you back <strong>absolute control over your code</strong>.</p>\n",attributes:{title:"Inversion of Control to Take Back Control",length:45,difficulty:"Advanced",language:"en",topics:["Software Architecture","TypeScript"]}}},"8de8":function(e,t){e.exports={body:"The frontend world has always been known by its **volatile nature**, however we don't make any effort to abstract ourselves from all that. We should build **robust** and **long-lived** software. In this talk we'll see how to tackle common problems in the frontend world using **TypeScript**, **React** and several **design patterns**. We'll see how we'll make our software _open to change_ while not trying to _guess the future_. Also, we'll appreciate how following the **SOLID principles** of our app will be very easy to test and change. Are you ready for this journey on _beautiful_ software?\n",html:"<p>The frontend world has always been known by its <strong>volatile nature</strong>, however we don't make any effort to abstract ourselves from all that. We should build <strong>robust</strong> and <strong>long-lived</strong> software. In this talk we'll see how to tackle common problems in the frontend world using <strong>TypeScript</strong>, <strong>React</strong> and several <strong>design patterns</strong>. We'll see how we'll make our software <em>open to change</em> while not trying to <em>guess the future</em>. Also, we'll appreciate how following the <strong>SOLID principles</strong> of our app will be very easy to test and change. Are you ready for this journey on <em>beautiful</em> software?</p>\n",attributes:{title:"How To Make Beautiful Software Again: Frontend Design Patterns",length:40,difficulty:"Advanced",language:"en",topics:["Proxies","JavaScript"]}}},"95d5":function(e,t,n){var r=n("40c3"),o=n("5168")("iterator"),a=n("481b");e.exports=n("584a").isIterable=function(e){var t=Object(e);return void 0!==t[o]||"@@iterator"in t||a.hasOwnProperty(r(t))}},"96cf":function(e,t,n){var r=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,o="function"===typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function s(e,t,n,r){var o=t&&t.prototype instanceof h?t:h,a=Object.create(o.prototype),i=new O(r||[]);return a._invoke=C(e,n,i),a}function l(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(r){return{type:"throw",arg:r}}}e.wrap=s;var u="suspendedStart",d="suspendedYield",p="executing",m="completed",f={};function h(){}function g(){}function y(){}var v={};v[a]=function(){return this};var w=Object.getPrototypeOf,b=w&&w(w(_([])));b&&b!==n&&r.call(b,a)&&(v=b);var x=y.prototype=h.prototype=Object.create(v);function A(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function L(e){function t(n,o,a,i){var c=l(e[n],e,o);if("throw"!==c.type){var s=c.arg,u=s.value;return u&&"object"===typeof u&&r.call(u,"__await")?Promise.resolve(u.__await).then(function(e){t("next",e,a,i)},function(e){t("throw",e,a,i)}):Promise.resolve(u).then(function(e){s.value=e,a(s)},function(e){return t("throw",e,a,i)})}i(c.arg)}var n;function o(e,r){function o(){return new Promise(function(n,o){t(e,r,n,o)})}return n=n?n.then(o,o):o()}this._invoke=o}function C(e,t,n){var r=u;return function(o,a){if(r===p)throw new Error("Generator is already running");if(r===m){if("throw"===o)throw a;return R()}n.method=o,n.arg=a;while(1){var i=n.delegate;if(i){var c=k(i,n);if(c){if(c===f)continue;return c}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===u)throw r=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var s=l(e,t,n);if("normal"===s.type){if(r=n.done?m:d,s.arg===f)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r=m,n.method="throw",n.arg=s.arg)}}}function k(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator["return"]&&(n.method="return",n.arg=t,k(e,n),"throw"===n.method))return f;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var o=l(r,e.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,f;var a=o.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,f):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,f)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function S(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function _(e){if(e){var n=e[a];if(n)return n.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function n(){while(++o<e.length)if(r.call(e,o))return n.value=e[o],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return g.prototype=x.constructor=y,y.constructor=g,y[c]=g.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,c in e||(e[c]="GeneratorFunction")),e.prototype=Object.create(x),e},e.awrap=function(e){return{__await:e}},A(L.prototype),L.prototype[i]=function(){return this},e.AsyncIterator=L,e.async=function(t,n,r,o){var a=new L(s(t,n,r,o));return e.isGeneratorFunction(n)?a:a.next().then(function(e){return e.done?e.value:a.next()})},A(x),x[c]="Generator",x[a]=function(){return this},x.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){while(t.length){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=_,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(S),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function o(r,o){return c.type="throw",c.arg=e,n.next=r,o&&(n.method="next",n.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],c=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var s=r.call(i,"catchLoc"),l=r.call(i,"finallyLoc");if(s&&l){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,f):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),f},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),S(n),f}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;S(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:_(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),f}},e}(e.exports);try{regeneratorRuntime=r}catch(o){Function("r","regeneratorRuntime = r")(r)}},9788:function(e,t,n){"use strict";n("96cf");var r,o=n("3b8d"),a=n("d225"),i=n("b0b4"),c=n("f798"),s=(n("ac6a"),n("5df3"),n("6b54"),function(){function e(t,n,r,o,i,c,s,l){Object(a["a"])(this,e),this.id=t,this.title=n,this.abstract=r,this.length=o,this.difficulty=i,this.language=c,this.topics=s,this.references=l}return Object(i["a"])(e,null,[{key:"create",value:function(t){return new e(t.id,t.title,t.abstract,t.length,t.difficulty,t.language,t.topics,t.references)}}]),e}());n("1bb4");(function(e){e[e["SPANISH"]=0]="SPANISH",e[e["ENGLISH"]=1]="ENGLISH"})(r||(r={}));n("c655");var l=n("2a3d"),u=(n("82e5"),n("9cd5")),d=n("309a"),p=function(){function e(t,n){Object(a["a"])(this,e),this.fileLoader=t,this.translationService=n}return Object(i["a"])(e,[{key:"findOneByLocale",value:function(){var e=Object(o["a"])(regeneratorRuntime.mark(function e(t,r){var o,a;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,n("478c")("./".concat(this.translationService.toString(r),"/").concat(t.value,".md"));case 3:o=e.sent,e.next=12;break;case 6:return e.prev=6,e.t0=e["catch"](0),a=this.translationService.toString(c["a"].DEFAULT),e.next=11,n("478c")("./".concat(a,"/").concat(t.value,".md"));case 11:o=e.sent;case 12:return e.abrupt("return",s.create({id:t,language:o.attributes.language,title:o.attributes.title,abstract:u["b"].fromValue(o.body),references:[],length:l["a"].fromMinutes(o.attributes.length),difficulty:d["a"].create().toDifficulty(o.attributes.difficulty),topics:[]}));case 13:case"end":return e.stop()}},e,this,[[0,6]])}));function t(t,n){return e.apply(this,arguments)}return t}()},{key:"findAllByLocale",value:function(){var e=Object(o["a"])(regeneratorRuntime.mark(function e(t){var n,r=this;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return n=this.fileLoader.loadTalks().map(function(e){return e.substr(2,e.length).substr(0,e.length-5)}),e.abrupt("return",Promise.all(n.map(function(e){return r.findOneByLocale(u["a"].fromValue(e),t)})));case 2:case"end":return e.stop()}},e,this)}));function t(t){return e.apply(this,arguments)}return t}()}]),e}(),m=n("a745"),f=n.n(m);function h(e){if(f()(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}var g=n("774e"),y=n.n(g),v=n("c8bb"),w=n.n(v);function b(e){if(w()(Object(e))||"[object Arguments]"===Object.prototype.toString.call(e))return y()(e)}function x(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function A(e){return h(e)||b(e)||x()}n("4f7f"),n("1c4c");var L=function(){function e(){Object(a["a"])(this,e)}return Object(i["a"])(e,[{key:"loadArticles",value:function(){var e=n("898a").keys(),t=n("a78d").keys();return Array.from(new Set([].concat(A(e),A(t))))}},{key:"loadTalks",value:function(){var e=n("5296").keys(),t=n("cd3d").keys();return Array.from(new Set([].concat(A(e),A(t))))}}],[{key:"create",value:function(){return new e}}]),e}(),C=n("3611"),k=(n("7f7f"),function(){function e(t,n){Object(a["a"])(this,e),this.decoratedCommand=t,this.logger=n}return Object(i["a"])(e,[{key:"execute",value:function(){return this.logger.log(this.decoratedCommand.constructor.name+" - "+Object.getOwnPropertyNames(this.decoratedCommand)),this.decoratedCommand.execute()}}]),e}()),T=function(){function e(t){Object(a["a"])(this,e),this._value=t}return Object(i["a"])(e,[{key:"format",value:function(){return this._value.toLocaleDateString(void 0,{day:"numeric",month:"long",year:"numeric"})}},{key:"toString",value:function(){return this._value.toISOString()}},{key:"value",get:function(){return this._value}}],[{key:"fromString",value:function(t){return new e(new Date(t))}},{key:"fromDate",value:function(t){return new e(t)}},{key:"fromNow",value:function(){return new e(new Date)}}]),e}(),S=function(){function e(t){Object(a["a"])(this,e),this.stdout=t}return Object(i["a"])(e,[{key:"log",value:function(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.stdout.info("[".concat(T.fromNow(),"] ").concat(e))}}],[{key:"create",value:function(t){return new e(t.stdout)}}]),e}(),O=function(){function e(){Object(a["a"])(this,e)}return Object(i["a"])(e,null,[{key:"decorate",value:function(t){return new k(t,e.logger)}}]),e}();O.logger=S.create({stdout:{error:console.error,info:console.log,warn:console.warn}});var _=function(){function e(t,n){Object(a["a"])(this,e),this.talksRepository=t,this.locale=n}return Object(i["a"])(e,[{key:"execute",value:function(){var e=Object(o["a"])(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",this.talksRepository.findAllByLocale(this.locale));case 1:case"end":return e.stop()}},e,this)}));function t(){return e.apply(this,arguments)}return t}()}],[{key:"create",value:function(t){return O.decorate(new e(new p(L.create(),C["a"].create(c["c"].create())),t.locale))}}]),e}(),R=n("9f8e"),j=function(){function e(t,n){Object(a["a"])(this,e),this.fileLoader=t,this.translationService=n}return Object(i["a"])(e,[{key:"findOneByLocale",value:function(){var e=Object(o["a"])(regeneratorRuntime.mark(function e(t,r){var o,a;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,n("b979")("./".concat(this.translationService.toString(r),"/").concat(t.value,".md"));case 3:o=e.sent,e.next=12;break;case 6:return e.prev=6,e.t0=e["catch"](0),a=this.translationService.toString(c["a"].DEFAULT),e.next=11,n("b979")("./".concat(a,"/").concat(t.value,".md"));case 11:o=e.sent;case 12:return e.abrupt("return",R["a"].create({id:t,body:R["c"].fromValue(o.body),date:T.fromString(o.attributes.date),title:o.attributes.title,locale:this.translationService.toLocale(o.attributes.locale)}));case 13:case"end":return e.stop()}},e,this,[[0,6]])}));function t(t,n){return e.apply(this,arguments)}return t}()},{key:"findAllByLocale",value:function(){var e=Object(o["a"])(regeneratorRuntime.mark(function e(t){var n,r=this;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return n=this.fileLoader.loadArticles().map(function(e){return e.substr(2,e.length).substr(0,e.length-5)}),e.abrupt("return",Promise.all(n.map(function(e){return r.findOneByLocale(R["b"].fromValue(e),t)})));case 2:case"end":return e.stop()}},e,this)}));function t(t){return e.apply(this,arguments)}return t}()}]),e}(),I=function(){function e(t,n,r){Object(a["a"])(this,e),this.articlesRepository=t,this.id=n,this.locale=r}return Object(i["a"])(e,[{key:"execute",value:function(){var e=Object(o["a"])(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",this.articlesRepository.findOneByLocale(this.id,this.locale));case 1:case"end":return e.stop()}},e,this)}));function t(){return e.apply(this,arguments)}return t}()}],[{key:"create",value:function(t){return O.decorate(new e(new j(L.create(),C["a"].create(c["c"].create())),t.id,t.locale))}}]),e}(),D=function(){function e(t,n){Object(a["a"])(this,e),this.articlesRepository=t,this.locale=n}return Object(i["a"])(e,[{key:"execute",value:function(){var e=Object(o["a"])(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",this.articlesRepository.findAllByLocale(this.locale));case 1:case"end":return e.stop()}},e,this)}));function t(){return e.apply(this,arguments)}return t}()}],[{key:"create",value:function(t){return O.decorate(new e(new j(L.create(),C["a"].create(c["c"].create())),t.locale))}}]),e}();n.d(t,"c",function(){return _}),n.d(t,"b",function(){return I}),n.d(t,"a",function(){return D})},9818:function(e,t){e.exports={body:"Use cases and commands. How to.\n\n\x3c!--more--\x3e\n\nThe [command pattern](https://sourcemaking.com/design_patterns/command) helps us encapsulate requests in order to perform certain operations, like logging, queuing and filtering.\n\nWe start with the interface:\n\n```typescript\nexport interface Command<T> {\n    execute(): Promise<T>\n}\n```\n\nAnd then we can look at a specific command, for example the one used to retrieve this article:\n\n```typescript\nimport { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale, Translator } from '../../domain/language'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { FileLoader } from '../../infraestructure/FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class GetArticle implements Command<Article> {\n    private constructor(\n        private readonly articlesRepository: ArticlesRepository,\n        private readonly id: Id,\n        private readonly locale: Locale\n    ) {}\n\n    public async execute(): Promise<Article> {\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\n    }\n\n    public static create(context: { id: Id; locale: Locale }) {\n        return new GetArticle(\n            new ArticlesFileRepository(\n                FileLoader.create(),\n                TranslationService.create(Translator.create())\n            ),\n            context.id,\n            context.locale\n        )\n    }\n}\n```\n\nThis command is responsible for obtaining a certain article using a [repository](http://shawnmc.cool/the-repository-pattern), where and how do we get this data we neither know nor care, that's responsibility of another class.\n\nThis command represents a [Use Case](https://en.wikipedia.org/wiki/Use_case) of my application. Right now it only needs to get the article from the repository but in the feature it could handle if a user has read the article, or if the user is a PRO user and then can read all articles instead of a subset of articles or anything we'd like.\n\nWho builds the command? Whoever uses it:\n\n```typescript\nconst article = await GetArticle.create({\n    id: 'use-cases-and-commands',\n    locale: Locale.EN\n}).execute()\n```\n\nI'm using [inversion of control](https://en.wikipedia.org/wiki/Inversion_of_control) to provide the dependencies needed for the GetArticle use case to work. In this case I'm going from an abstraction (ArticlesRepository) to a concreation (ArticlesFileRepository). If tomorrow I decide to serve the articles via API I would only need to change the factory.\n\nWhat is also interesting about commands is that they are easily augmented. For example we can log when a command is executed without touching any commands using the [Decorator Pattern](https://sourcemaking.com/design_patterns/decorator):\n\n```typescript\nimport { Command } from './Command'\nimport { Logger } from './Logger'\n\nexport class LoggerCommandDecorator<T> implements Command<T> {\n    public constructor(\n        private readonly decoratedCommand: Command<T>,\n        private readonly logger: Logger\n    ) {}\n\n    public execute(): Promise<T> {\n        this.logger.log(\n            (this.decoratedCommand as Object).constructor.name +\n                ' - ' +\n                Object.getOwnPropertyNames(this.decoratedCommand)\n        )\n        return this.decoratedCommand.execute()\n    }\n}\n```\n\nThen, using a `UserCaseDecorator` I specify which decorators I want for **all my use cases**:\n\n```typescript\nimport { Command } from '../../infraestructure/Command'\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\nimport { Logger } from '../../infraestructure/Logger'\n\nexport class UseCaseDecorator {\n    private static readonly logger = Logger.create({\n        // eslint-disable-next-line\n        stdout: { error: console.error, info: console.log, warn: console.warn }\n    })\n\n    public static decorate<T>(command: Command<T>) {\n        return new LoggerCommandDecorator<T>(command, UseCaseDecorator.logger)\n    }\n}\n```\n\nAnd then in each use case we use the `UseCaseDecorator` like so:\n\n```typescript\nimport { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale, Translator } from '../../domain/language'\nimport { UseCaseDecorator } from './UseCaseDecorator'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { FileLoader } from '../../infraestructure/FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class GetArticle implements Command<Article> {\n    private constructor(\n        private readonly articlesRepository: ArticlesRepository,\n        private readonly id: Id,\n        private readonly locale: Locale\n    ) {}\n\n    public async execute(): Promise<Article> {\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\n    }\n\n    public static create(context: { id: Id; locale: Locale }) {\n        return UseCaseDecorator.decorate(\n            new GetArticle(\n                new ArticlesFileRepository(\n                    FileLoader.create(),\n                    TranslationService.create(Translator.create())\n                ),\n                context.id,\n                context.locale\n            )\n        )\n    }\n}\n```\n\nAnd we could create as many decorators as we want and use composition to give more behaviour to our commands.\n",html:"<p>Use cases and commands. How to.</p>\n\x3c!--more--\x3e\n<p>The <a href=\"https://sourcemaking.com/design_patterns/command\">command pattern</a> helps us encapsulate requests in order to perform certain operations, like logging, queuing and filtering.</p>\n<p>We start with the interface:</p>\n<pre><code class=\"language-typescript\">export interface Command&lt;T&gt; {\n    execute(): Promise&lt;T&gt;\n}\n</code></pre>\n<p>And then we can look at a specific command, for example the one used to retrieve this article:</p>\n<pre><code class=\"language-typescript\">import { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale, Translator } from '../../domain/language'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { FileLoader } from '../../infraestructure/FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class GetArticle implements Command&lt;Article&gt; {\n    private constructor(\n        private readonly articlesRepository: ArticlesRepository,\n        private readonly id: Id,\n        private readonly locale: Locale\n    ) {}\n\n    public async execute(): Promise&lt;Article&gt; {\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\n    }\n\n    public static create(context: { id: Id; locale: Locale }) {\n        return new GetArticle(\n            new ArticlesFileRepository(\n                FileLoader.create(),\n                TranslationService.create(Translator.create())\n            ),\n            context.id,\n            context.locale\n        )\n    }\n}\n</code></pre>\n<p>This command is responsible for obtaining a certain article using a <a href=\"http://shawnmc.cool/the-repository-pattern\">repository</a>, where and how do we get this data we neither know nor care, that's responsibility of another class.</p>\n<p>This command represents a <a href=\"https://en.wikipedia.org/wiki/Use_case\">Use Case</a> of my application. Right now it only needs to get the article from the repository but in the feature it could handle if a user has read the article, or if the user is a PRO user and then can read all articles instead of a subset of articles or anything we'd like.</p>\n<p>Who builds the command? Whoever uses it:</p>\n<pre><code class=\"language-typescript\">const article = await GetArticle.create({\n    id: 'use-cases-and-commands',\n    locale: Locale.EN\n}).execute()\n</code></pre>\n<p>I'm using <a href=\"https://en.wikipedia.org/wiki/Inversion_of_control\">inversion of control</a> to provide the dependencies needed for the GetArticle use case to work. In this case I'm going from an abstraction (ArticlesRepository) to a concreation (ArticlesFileRepository). If tomorrow I decide to serve the articles via API I would only need to change the factory.</p>\n<p>What is also interesting about commands is that they are easily augmented. For example we can log when a command is executed without touching any commands using the <a href=\"https://sourcemaking.com/design_patterns/decorator\">Decorator Pattern</a>:</p>\n<pre><code class=\"language-typescript\">import { Command } from './Command'\nimport { Logger } from './Logger'\n\nexport class LoggerCommandDecorator&lt;T&gt; implements Command&lt;T&gt; {\n    public constructor(\n        private readonly decoratedCommand: Command&lt;T&gt;,\n        private readonly logger: Logger\n    ) {}\n\n    public execute(): Promise&lt;T&gt; {\n        this.logger.log(\n            (this.decoratedCommand as Object).constructor.name +\n                ' - ' +\n                Object.getOwnPropertyNames(this.decoratedCommand)\n        )\n        return this.decoratedCommand.execute()\n    }\n}\n</code></pre>\n<p>Then, using a <code>UserCaseDecorator</code> I specify which decorators I want for <strong>all my use cases</strong>:</p>\n<pre><code class=\"language-typescript\">import { Command } from '../../infraestructure/Command'\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\nimport { Logger } from '../../infraestructure/Logger'\n\nexport class UseCaseDecorator {\n    private static readonly logger = Logger.create({\n        // eslint-disable-next-line\n        stdout: { error: console.error, info: console.log, warn: console.warn }\n    })\n\n    public static decorate&lt;T&gt;(command: Command&lt;T&gt;) {\n        return new LoggerCommandDecorator&lt;T&gt;(command, UseCaseDecorator.logger)\n    }\n}\n</code></pre>\n<p>And then in each use case we use the <code>UseCaseDecorator</code> like so:</p>\n<pre><code class=\"language-typescript\">import { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale, Translator } from '../../domain/language'\nimport { UseCaseDecorator } from './UseCaseDecorator'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { FileLoader } from '../../infraestructure/FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class GetArticle implements Command&lt;Article&gt; {\n    private constructor(\n        private readonly articlesRepository: ArticlesRepository,\n        private readonly id: Id,\n        private readonly locale: Locale\n    ) {}\n\n    public async execute(): Promise&lt;Article&gt; {\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\n    }\n\n    public static create(context: { id: Id; locale: Locale }) {\n        return UseCaseDecorator.decorate(\n            new GetArticle(\n                new ArticlesFileRepository(\n                    FileLoader.create(),\n                    TranslationService.create(Translator.create())\n                ),\n                context.id,\n                context.locale\n            )\n        )\n    }\n}\n</code></pre>\n<p>And we could create as many decorators as we want and use composition to give more behaviour to our commands.</p>\n",attributes:{title:"Use Cases and Command Pattern",date:"2019-04-17T00:00:00.000Z",locale:"en"}}},a745:function(e,t,n){e.exports=n("f410")},a78d:function(e,t,n){var r={"./use-cases-and-commands.md":"9818"};function o(e){var t=a(e);return n(t)}function a(e){var t=r[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id="a78d"},aba2:function(e,t,n){var r=n("e53d"),o=n("4178").set,a=r.MutationObserver||r.WebKitMutationObserver,i=r.process,c=r.Promise,s="process"==n("6b4c")(i);e.exports=function(){var e,t,n,l=function(){var r,o;s&&(r=i.domain)&&r.exit();while(e){o=e.fn,e=e.next;try{o()}catch(a){throw e?n():t=void 0,a}}t=void 0,r&&r.enter()};if(s)n=function(){i.nextTick(l)};else if(!a||r.navigator&&r.navigator.standalone)if(c&&c.resolve){var u=c.resolve(void 0);n=function(){u.then(l)}}else n=function(){o.call(r,l)};else{var d=!0,p=document.createTextNode("");new a(l).observe(p,{characterData:!0}),n=function(){p.data=d=!d}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},b979:function(e,t,n){var r={"./en/use-cases-and-commands.md":["9818"],"./es/use-cases-and-commands.md":["391e"]};function o(e){var t=r[e];return t?Promise.all(t.slice(1).map(n.e)).then(function(){var e=t[0];return n.t(e,7)}):Promise.resolve().then(function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}o.keys=function(){return Object.keys(r)},o.id="b979",e.exports=o},bc13:function(e,t,n){var r=n("e53d"),o=r.navigator;e.exports=o&&o.userAgent||""},c655:function(e,t,n){"use strict";var r;n.d(t,"a",function(){return r}),function(e){e[e["EASY"]=0]="EASY",e[e["INTERMEDIATE"]=1]="INTERMEDIATE",e[e["ADVANCED"]=2]="ADVANCED"}(r||(r={}))},c8bb:function(e,t,n){e.exports=n("54a1")},cd3d:function(e,t,n){var r={"./advanced-javascript-patterns.md":"892f","./good-practices-vue.md":"2b3a","./how-to-make-beautiful-software-again.md":"8de8","./inversion-of-control.md":"8ae8","./typescript-for-javascripters.md":"670f"};function o(e){var t=a(e);return n(t)}function a(e){var t=r[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id="cd3d"},cd78:function(e,t,n){var r=n("e4ae"),o=n("f772"),a=n("656e");e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=a.f(e),i=n.resolve;return i(t),n.promise}},d2d5:function(e,t,n){n("1654"),n("549b"),e.exports=n("584a").Array.from},d4ad:function(e,t){e.exports={body:"Vue parece ser el framework del momento, pero... ¿es a prueba de testing, inyección de dependencias, separación de responsabilidades, composición y otras buenas prácticas? En esta charla veremos cómo le podemos sacar el máximo partido a Vue para que nuestro software sea más robusto, fácil de testear y fácilmente modificable.\n",html:"<p>Vue parece ser el framework del momento, pero... ¿es a prueba de testing, inyección de dependencias, separación de responsabilidades, composición y otras buenas prácticas? En esta charla veremos cómo le podemos sacar el máximo partido a Vue para que nuestro software sea más robusto, fácil de testear y fácilmente modificable.</p>\n",attributes:{title:"(Vue)nas prácticas",length:40,difficulty:"Intermediate",language:"es",topics:["Vue","JavaScript","TypeScript"]}}},f1ae:function(e,t,n){"use strict";var r=n("86cc"),o=n("4630");e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},f201:function(e,t,n){var r=n("e4ae"),o=n("79aa"),a=n("5168")("species");e.exports=function(e,t){var n,i=r(e).constructor;return void 0===i||void 0==(n=r(i)[a])?t:o(n)}},f410:function(e,t,n){n("1af6"),e.exports=n("584a").Array.isArray}}]);
//# sourceMappingURL=article~articles~home~talks.34c5994d.js.map