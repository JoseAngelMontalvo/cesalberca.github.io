{"version":3,"sources":["webpack:///./src/domain/talks/es/how-to-make-beautiful-software.md","webpack:///./node_modules/core-js/library/modules/es6.array.is-array.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./node_modules/core-js/library/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./src/domain/DifficultyService.ts","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./src/domain/articles/assets sync ^\\.\\/.*$","webpack:///./src/domain/articles/es/use-cases-and-commands.md","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/core-js/library/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/library/modules/_task.js","webpack:///./src/domain/articles/assets/abstract-dark-design.jpg","webpack:///./node_modules/core-js/library/modules/es7.promise.try.js","webpack:///./node_modules/core-js/library/modules/_perform.js","webpack:///./src/domain/talks lazy ^\\.\\/.*\\.md$ namespace object","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/core-js/modules/es6.set.js","webpack:///./src/domain/talks/es sync ^\\.\\/.*$","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./src/domain/articles/assets/art-artistic-canvas.jpg","webpack:///./node_modules/core-js/library/modules/_new-promise-capability.js","webpack:///./node_modules/core-js/library/fn/promise.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./src/domain/articles/en/theming.md","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/domain/talks/en/advanced-javascript-patterns.md","webpack:///./src/domain/articles/es sync ^\\.\\/.*$","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/domain/talks/Language.ts","webpack:///./src/domain/talks/Talk.ts","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./src/infraestructure/FileLoader.ts","webpack:///./src/domain/talks/Event.ts","webpack:///./src/infraestructure/Maybe.ts","webpack:///./src/domain/talks/LanguageService.ts","webpack:///./src/domain/talks/Topic.ts","webpack:///./src/infraestructure/talks/TalksFileRepository.ts","webpack:///./src/infraestructure/LoggerCommandDecorator.ts","webpack:///./src/infraestructure/Logger.ts","webpack:///./src/application/useCases/UseCaseDecorator.ts","webpack:///./src/application/useCases/GetTalksGiven.ts","webpack:///./src/infraestructure/articles/ArticlesFileRepository.ts","webpack:///./src/application/useCases/GetArticle.ts","webpack:///./src/application/useCases/GetAllArticles.ts","webpack:///./src/application/useCases/index.ts","webpack:///./src/domain/articles/en/use-cases-and-commands.md","webpack:///./src/domain/talks/en/how-to-make-beautiful-software.md","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./src/domain/articles/en sync ^\\.\\/.*$","webpack:///./node_modules/core-js/library/modules/_microtask.js","webpack:///./src/domain/talks/es/advanced-javascript-patterns.md","webpack:///./src/domain/articles lazy ^\\.\\/.*\\.md$ namespace object","webpack:///./node_modules/core-js/library/modules/_user-agent.js","webpack:///./src/domain/talks/Difficulty.ts","webpack:///./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///./src/domain/talks/en sync ^\\.\\/.*$","webpack:///./node_modules/core-js/library/modules/_promise-resolve.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./node_modules/core-js/modules/_create-property.js","webpack:///./node_modules/core-js/library/modules/_species-constructor.js","webpack:///./node_modules/core-js/library/fn/array/is-array.js"],"names":["module","exports","body","html","attributes","title","length","difficulty","language","topics","events","name","date","vue","render","staticRenderFns","component","data","templateRender","createElement","this","created","_vm","_h","$createElement","_self","_c","_m","$options","staticClass","_v","$export","__webpack_require__","S","isArray","ctx","toObject","call","isArrayIter","toLength","createProperty","getIterFn","F","iter","Array","from","arrayLike","result","step","iterator","O","C","aLen","arguments","mapfn","undefined","mapping","index","iterFn","next","done","value","$defineProperty","createDesc","object","f","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","global","classof","isObject","aFunction","anInstance","forOf","speciesConstructor","task","set","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","PROMISE","TypeError","process","versions","v8","$Promise","isNode","empty","newPromiseCapability","USE_NATIVE","promise","resolve","FakePromise","constructor","exec","PromiseRejectionEvent","then","indexOf","e","isThenable","it","notify","isReject","_n","chain","ok","_s","i","run","reaction","exited","handler","fail","reject","domain","onHandleUnhandled","enter","exit","onUnhandled","console","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","v","onrejectionhandled","$reject","_d","_w","slice","$resolve","wrapper","executor","err","prototype","onFulfilled","onRejected","push","catch","G","W","Promise","r","capability","$$reject","x","all","iterable","values","remaining","$index","alreadyCalled","race","fails","method","arg","DifficultyService","Object","_Users_cesaralberca_workspace_personal_blog_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_cesaralberca_workspace_personal_blog_node_modules_babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","string","_talks_Difficulty__WEBPACK_IMPORTED_MODULE_3__","ADVANCED","INTERMEDIATE","EASY","_language__WEBPACK_IMPORTED_MODULE_2__","concat","flags","RegExp","configurable","get","map","./abstract-dark-design.jpg","./art-artistic-canvas.jpg","webpackContext","req","id","webpackContextResolve","Error","code","keys","locale","image","attrs","href","pre","class","d","__webpack_exports__","_asyncToGenerator","_core_js_promise__WEBPACK_IMPORTED_MODULE_0__","_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default","n","asyncGeneratorStep","gen","_next","_throw","info","a","fn","self","args","apply","core","P","R","finally","onFinally","isFunction","defer","channel","port","invoke","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","hasOwnProperty","listener","event","Function","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","clear","p","try","callbackfn","promiseCapability","./en/advanced-javascript-patterns.md","./en/how-to-make-beautiful-software.md","./es/advanced-javascript-patterns.md","./es/how-to-make-beautiful-software.md","webpackAsyncContext","ids","t","ITERATOR","SAFE_CLOSING","riter","skipClosing","safe","arr","strong","validate","SET","add","def","./advanced-javascript-patterns.md","./how-to-make-beautiful-software.md","$sort","sort","test","comparefn","PromiseCapability","$$resolve","anObject","$flags","DESCRIPTORS","TO_STRING","$toString","define","source","dP","FProto","nameRE","NAME","match","./use-cases-and-commands.md","Iterators","isIterable","runtime","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","obj","type","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","record","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","toString","reverse","pop","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Language","Talk_Talk","Talk","abstract","references","classCallCheck","createClass","talk","_arrayWithoutHoles","is_array_default","arr2","_iterableToArray","is_iterable_default","from_default","_nonIterableSpread","_toConsumableArray","FileLoader_FileLoader","FileLoader","spanishArticles","englishArticles","Set","spanishTalks","englishTalks","Event_Event","Event","datetime","options","Maybe_Maybe","Maybe","has","defaultValue","none","some","isValid","isNumberZero","LanguageService_LanguageService","LanguageService","toLowerCase","SPANISH","ENGLISH","Topic_Topic","Topic","_value","label","TalksFileRepository_TalksFileRepository","TalksFileRepository","fileLoader","translationService","languageService","_findOneByLocale","asyncToGenerator","_callee","_locale","_context","t0","domain_language","DEFAULT","toLanguage","fromValue","Length","fromMinutes","toDifficulty","topic","getOrElse","Datetime","fromString","findOneByLocale","_x","_x2","_findAllByLocale","_callee2","talksIds","_this","_context2","loadTalks","substr","findAllByLocale","_x3","TranslationService","LoggerCommandDecorator_LoggerCommandDecorator","LoggerCommandDecorator","decoratedCommand","logger","log","getOwnPropertyNames","execute","Logger_Logger","Logger","stdout","message","fromNow","UseCaseDecorator_UseCaseDecorator","UseCaseDecorator","command","warn","GetTalksGiven_GetTalksGiven","GetTalksGiven","talksRepository","_execute","decorate","ArticlesFileRepository_ArticlesFileRepository","ArticlesFileRepository","article","articles","toLocale","articlesIds","loadArticles","GetArticle_GetArticle","GetArticle","articlesRepository","GetAllArticles_GetAllArticles","GetAllArticles","articleA","articleB","./theming.md","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","last","flush","parent","navigator","standalone","toggle","node","document","createTextNode","observe","characterData","./en/theming.md","./en/use-cases-and-commands.md","./es/use-cases-and-commands.md","Difficulty","SPECIES","D"],"mappings":"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","file":"js/article~articles~home~talks.657e31b7.js","sourcesContent":["module.exports = { \n    body: \"El mundo frontend siempre ha sido conocido por su **naturaleza volátil**, sin embargo no hacemos demasiado esfuerzo para abstraernos de dicha naturaleza. Deberíamos construir software **robusto** y de **larga vida**. En esta charla veremos cómo afrontar problemas comunes en el mundo frontend usando **TypeScript**, **componentes** y varios **patrones de diseño**. Además veremos cómo hacer nuestro software _abierto al cambio_ sin tener que _intentar adivinar el futuro_. Y por supuesto seguiremos los principios **SOLID** para que nuestra aplicación sea fácil de cambiar y probar. ¡Comencemos este viaje hacia el software _bonito_!\\n\",\n    html: \"<p>El mundo frontend siempre ha sido conocido por su <strong>naturaleza volátil</strong>, sin embargo no hacemos demasiado esfuerzo para abstraernos de dicha naturaleza. Deberíamos construir software <strong>robusto</strong> y de <strong>larga vida</strong>. En esta charla veremos cómo afrontar problemas comunes en el mundo frontend usando <strong>TypeScript</strong>, <strong>componentes</strong> y varios <strong>patrones de diseño</strong>. Además veremos cómo hacer nuestro software <em>abierto al cambio</em> sin tener que <em>intentar adivinar el futuro</em>. Y por supuesto seguiremos los principios <strong>SOLID</strong> para que nuestra aplicación sea fácil de cambiar y probar. ¡Comencemos este viaje hacia el software <em>bonito</em>!</p>\\n\",\n    attributes: {\"title\":\"A*front*ando el mal Software\",\"length\":40,\"difficulty\":\"Advanced\",\"language\":\"es\",\"topics\":[\"Vue\",\"JavaScript\",\"TypeScript\"],\"events\":[{\"name\":\"Codemotion Madrid\",\"date\":\"2019-09-25T00:00:00.000Z\"}]},\n      vue: {\n        render: \"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }\",\n        staticRenderFns: \"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"dynamicContent\\\"},[_c('p',[_vm._v(\\\"El mundo frontend siempre ha sido conocido por su \\\"),_c('strong',[_vm._v(\\\"naturaleza volátil\\\")]),_vm._v(\\\", sin embargo no hacemos demasiado esfuerzo para abstraernos de dicha naturaleza. Deberíamos construir software \\\"),_c('strong',[_vm._v(\\\"robusto\\\")]),_vm._v(\\\" y de \\\"),_c('strong',[_vm._v(\\\"larga vida\\\")]),_vm._v(\\\". En esta charla veremos cómo afrontar problemas comunes en el mundo frontend usando \\\"),_c('strong',[_vm._v(\\\"TypeScript\\\")]),_vm._v(\\\", \\\"),_c('strong',[_vm._v(\\\"componentes\\\")]),_vm._v(\\\" y varios \\\"),_c('strong',[_vm._v(\\\"patrones de diseño\\\")]),_vm._v(\\\". Además veremos cómo hacer nuestro software \\\"),_c('em',[_vm._v(\\\"abierto al cambio\\\")]),_vm._v(\\\" sin tener que \\\"),_c('em',[_vm._v(\\\"intentar adivinar el futuro\\\")]),_vm._v(\\\". Y por supuesto seguiremos los principios \\\"),_c('strong',[_vm._v(\\\"SOLID\\\")]),_vm._v(\\\" para que nuestra aplicación sea fácil de cambiar y probar. ¡Comencemos este viaje hacia el software \\\"),_c('em',[_vm._v(\\\"bonito\\\")]),_vm._v(\\\"!\\\")])]) }]\",\n        component: {\n          data: function () {\n            return {\n              templateRender: null\n            }\n          },\n          render: function (createElement) {\n            return this.templateRender ? this.templateRender() : createElement(\"div\", \"Rendering\");\n          },\n          created: function () {\n            this.templateRender = function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) };\n            this.$options.staticRenderFns = [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dynamicContent\"},[_c('p',[_vm._v(\"El mundo frontend siempre ha sido conocido por su \"),_c('strong',[_vm._v(\"naturaleza volátil\")]),_vm._v(\", sin embargo no hacemos demasiado esfuerzo para abstraernos de dicha naturaleza. Deberíamos construir software \"),_c('strong',[_vm._v(\"robusto\")]),_vm._v(\" y de \"),_c('strong',[_vm._v(\"larga vida\")]),_vm._v(\". En esta charla veremos cómo afrontar problemas comunes en el mundo frontend usando \"),_c('strong',[_vm._v(\"TypeScript\")]),_vm._v(\", \"),_c('strong',[_vm._v(\"componentes\")]),_vm._v(\" y varios \"),_c('strong',[_vm._v(\"patrones de diseño\")]),_vm._v(\". Además veremos cómo hacer nuestro software \"),_c('em',[_vm._v(\"abierto al cambio\")]),_vm._v(\" sin tener que \"),_c('em',[_vm._v(\"intentar adivinar el futuro\")]),_vm._v(\". Y por supuesto seguiremos los principios \"),_c('strong',[_vm._v(\"SOLID\")]),_vm._v(\" para que nuestra aplicación sea fácil de cambiar y probar. ¡Comencemos este viaje hacia el software \"),_c('em',[_vm._v(\"bonito\")]),_vm._v(\"!\")])]) }];\n          }\n        }\n      }\n     }","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","import { TranslationError } from './language'\nimport { Difficulty } from './talks/Difficulty'\n\nexport class DifficultyService {\n  public toDifficulty(string: string): Difficulty {\n    switch (string) {\n      case 'Advanced':\n        return Difficulty.ADVANCED\n      case 'Intermediate':\n        return Difficulty.INTERMEDIATE\n      case 'Beginner':\n        return Difficulty.EASY\n      default:\n        throw new TranslationError(`String ${string} could not be mapped to a difficulty`)\n    }\n  }\n\n  public toString(difficulty: Difficulty) {\n    switch (difficulty) {\n      case Difficulty.ADVANCED:\n        return 'talks_talkDifficultyAdvanced' as const\n      case Difficulty.INTERMEDIATE:\n        return 'talks_talkDifficultyIntermediate' as const\n      case Difficulty.EASY:\n        return 'talks_talkDifficultyEasy' as const\n    }\n  }\n\n  public static create() {\n    return new DifficultyService()\n  }\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var map = {\n\t\"./abstract-dark-design.jpg\": \"41b7\",\n\t\"./art-artistic-canvas.jpg\": \"5e5b\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"3886\";","module.exports = { \n    body: \"Casos de Uso y comandos. Cómo.\\n\\n<!--more-->\\n\\nEl [patrón comando](https://sourcemaking.com/design_patterns/command) nos ayuda a encapsular peticiones para realizar ciertas operaciones como logs, colas y filtrado.\\n\\nComenzamos con la interfaz:\\n\\n```typescript\\nexport interface Command<T> {\\n    execute(): Promise<T>\\n}\\n```\\n\\nAhora podremos ver un comando específico, por ejemplo el que se usa para cargar este mismo artículo.\\n\\n```typescript\\nimport { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command<Article> {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise<Article> {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return new GetArticle(\\n            new ArticlesFileRepository(\\n                FileLoader.create(),\\n                TranslationService.create(Translator.create())\\n            ),\\n            context.id,\\n            context.locale\\n        )\\n    }\\n}\\n```\\n\\nEste comando es responsable de obtener cierto artículo usando un [repositorio](http://shawnmc.cool/the-repository-pattern), dónde y cómo lo haga es algo que no nos acontece a nosotros, ya que es responsabilidad de otra clase.\\n\\nEl comando representa un [Caso de Uso](https://en.wikipedia.org/wiki/Use_case) de mi aplicación. Ahora mismo solamente necesito recoger el artículo del repositorio pero podría desarrollar una nueva funcionalidad donde se podría gestionar el si el usuario ha leído el artículo ya o si el usuario es PRO y por tanto puede leer todos los artículos en vez de unos pocos.\\n\\n¿Quién construye el comando? Pues quien lo use:\\n\\n```typescript\\nconst article = await GetArticle.create({\\n    id: 'use-cases-and-commands',\\n    locale: Locale.EN\\n}).execute()\\n```\\n\\nEstoy usando [inversion de control](https://en.wikipedia.org/wiki/Inversion_of_control) para proveer de las dependencias necesarias para que el case de uso GetArticle funcione. Esto lo hago mediante un función constructura (si fuese muy complejo construir este caso de uso nos crearíamos una [factoría](https://sourcemaking.com/design_patterns/factory_method)):\\n\\n```typescript\\npublic static create(context: { id: Id; locale: Locale }) {\\n    return new GetArticle(\\n        new ArticlesFileRepository(\\n          FileLoader.create(),\\n          TranslationService.create(Translator.create())\\n        ),\\n        context.id,\\n        context.locale\\n    )\\n}\\n```\\n\\nEn este caso estoy pasando de una abstracción (ArticlesRepository) a una concreción (ArticlesFileRepository). Si mañana decido que mis artículos vendrán via API únicamente tendré que cambiar el método factoría.\\n\\nLo que también es interesante de los comando es que son fáciles de extender. Por ejemplo podemos dejar una traza cada vez que un comando sea ejecutado usando el [patrón decorador](https://sourcemaking.com/design_patterns/decorator):\\n\\n```typescript\\nimport { Command } from './Command'\\nimport { Logger } from './Logger'\\n\\nexport class LoggerCommandDecorator<T> implements Command<T> {\\n    public constructor(\\n        private readonly decoratedCommand: Command<T>,\\n        private readonly logger: Logger\\n    ) {}\\n\\n    public execute(): Promise<T> {\\n        this.logger.log(\\n            (this.decoratedCommand as Object).constructor.name +\\n                ' - ' +\\n                Object.getOwnPropertyNames(this.decoratedCommand)\\n        )\\n        return this.decoratedCommand.execute()\\n    }\\n}\\n```\\n\\nDespués, usando un `UserCaseDecorator` especifico qué decoradores quiero aplicar para **todos mis casos de uso**:\\n\\n```typescript\\nimport { Command } from '../../infraestructure/Command'\\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\\nimport { Logger } from '../../infraestructure/Logger'\\n\\nexport class UseCaseDecorator {\\n    private static readonly logger = Logger.create({\\n        // eslint-disable-next-line\\n        stdout: { error: console.error, info: console.log, warn: console.warn }\\n    })\\n\\n    public static decorate<T>(command: Command<T>) {\\n        return new LoggerCommandDecorator<T>(command, UseCaseDecorator.logger)\\n    }\\n}\\n```\\n\\nY después en cada Caso de Uso usamos el `UseCaseDecorator` de esta forma:\\n\\n```typescript\\nimport { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { UseCaseDecorator } from './UseCaseDecorator'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command<Article> {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise<Article> {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return UseCaseDecorator.decorate(\\n            new GetArticle(\\n                new ArticlesFileRepository(\\n                    FileLoader.create(),\\n                    TranslationService.create(Translator.create())\\n                ),\\n                context.id,\\n                context.locale\\n            )\\n        )\\n    }\\n}\\n```\\n\\nY podríamos crear todos los decaradores que se nos ocurran y usando composición podemos dar más y más comportamiento a nuestros comandos.\\n\",\n    html: \"<p>Casos de Uso y comandos. Cómo.</p>\\n<!--more-->\\n<p>El <a href=\\\"https://sourcemaking.com/design_patterns/command\\\">patrón comando</a> nos ayuda a encapsular peticiones para realizar ciertas operaciones como logs, colas y filtrado.</p>\\n<p>Comenzamos con la interfaz:</p>\\n<pre><code class=\\\"language-typescript\\\">export interface Command&lt;T&gt; {\\n    execute(): Promise&lt;T&gt;\\n}\\n</code></pre>\\n<p>Ahora podremos ver un comando específico, por ejemplo el que se usa para cargar este mismo artículo.</p>\\n<pre><code class=\\\"language-typescript\\\">import { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command&lt;Article&gt; {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise&lt;Article&gt; {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return new GetArticle(\\n            new ArticlesFileRepository(\\n                FileLoader.create(),\\n                TranslationService.create(Translator.create())\\n            ),\\n            context.id,\\n            context.locale\\n        )\\n    }\\n}\\n</code></pre>\\n<p>Este comando es responsable de obtener cierto artículo usando un <a href=\\\"http://shawnmc.cool/the-repository-pattern\\\">repositorio</a>, dónde y cómo lo haga es algo que no nos acontece a nosotros, ya que es responsabilidad de otra clase.</p>\\n<p>El comando representa un <a href=\\\"https://en.wikipedia.org/wiki/Use_case\\\">Caso de Uso</a> de mi aplicación. Ahora mismo solamente necesito recoger el artículo del repositorio pero podría desarrollar una nueva funcionalidad donde se podría gestionar el si el usuario ha leído el artículo ya o si el usuario es PRO y por tanto puede leer todos los artículos en vez de unos pocos.</p>\\n<p>¿Quién construye el comando? Pues quien lo use:</p>\\n<pre><code class=\\\"language-typescript\\\">const article = await GetArticle.create({\\n    id: 'use-cases-and-commands',\\n    locale: Locale.EN\\n}).execute()\\n</code></pre>\\n<p>Estoy usando <a href=\\\"https://en.wikipedia.org/wiki/Inversion_of_control\\\">inversion de control</a> para proveer de las dependencias necesarias para que el case de uso GetArticle funcione. Esto lo hago mediante un función constructura (si fuese muy complejo construir este caso de uso nos crearíamos una <a href=\\\"https://sourcemaking.com/design_patterns/factory_method\\\">factoría</a>):</p>\\n<pre><code class=\\\"language-typescript\\\">public static create(context: { id: Id; locale: Locale }) {\\n    return new GetArticle(\\n        new ArticlesFileRepository(\\n          FileLoader.create(),\\n          TranslationService.create(Translator.create())\\n        ),\\n        context.id,\\n        context.locale\\n    )\\n}\\n</code></pre>\\n<p>En este caso estoy pasando de una abstracción (ArticlesRepository) a una concreción (ArticlesFileRepository). Si mañana decido que mis artículos vendrán via API únicamente tendré que cambiar el método factoría.</p>\\n<p>Lo que también es interesante de los comando es que son fáciles de extender. Por ejemplo podemos dejar una traza cada vez que un comando sea ejecutado usando el <a href=\\\"https://sourcemaking.com/design_patterns/decorator\\\">patrón decorador</a>:</p>\\n<pre><code class=\\\"language-typescript\\\">import { Command } from './Command'\\nimport { Logger } from './Logger'\\n\\nexport class LoggerCommandDecorator&lt;T&gt; implements Command&lt;T&gt; {\\n    public constructor(\\n        private readonly decoratedCommand: Command&lt;T&gt;,\\n        private readonly logger: Logger\\n    ) {}\\n\\n    public execute(): Promise&lt;T&gt; {\\n        this.logger.log(\\n            (this.decoratedCommand as Object).constructor.name +\\n                ' - ' +\\n                Object.getOwnPropertyNames(this.decoratedCommand)\\n        )\\n        return this.decoratedCommand.execute()\\n    }\\n}\\n</code></pre>\\n<p>Después, usando un <code>UserCaseDecorator</code> especifico qué decoradores quiero aplicar para <strong>todos mis casos de uso</strong>:</p>\\n<pre><code class=\\\"language-typescript\\\">import { Command } from '../../infraestructure/Command'\\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\\nimport { Logger } from '../../infraestructure/Logger'\\n\\nexport class UseCaseDecorator {\\n    private static readonly logger = Logger.create({\\n        // eslint-disable-next-line\\n        stdout: { error: console.error, info: console.log, warn: console.warn }\\n    })\\n\\n    public static decorate&lt;T&gt;(command: Command&lt;T&gt;) {\\n        return new LoggerCommandDecorator&lt;T&gt;(command, UseCaseDecorator.logger)\\n    }\\n}\\n</code></pre>\\n<p>Y después en cada Caso de Uso usamos el <code>UseCaseDecorator</code> de esta forma:</p>\\n<pre><code class=\\\"language-typescript\\\">import { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { UseCaseDecorator } from './UseCaseDecorator'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command&lt;Article&gt; {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise&lt;Article&gt; {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return UseCaseDecorator.decorate(\\n            new GetArticle(\\n                new ArticlesFileRepository(\\n                    FileLoader.create(),\\n                    TranslationService.create(Translator.create())\\n                ),\\n                context.id,\\n                context.locale\\n            )\\n        )\\n    }\\n}\\n</code></pre>\\n<p>Y podríamos crear todos los decaradores que se nos ocurran y usando composición podemos dar más y más comportamiento a nuestros comandos.</p>\\n\",\n    attributes: {\"title\":\"Casos de Uso y el patrón Comando\",\"date\":\"2019-04-17T00:00:00.000Z\",\"locale\":\"es\",\"image\":\"abstract-dark-design.jpg\"},\n      vue: {\n        render: \"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }\",\n        staticRenderFns: \"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"dynamicContent\\\"},[_c('p',[_vm._v(\\\"Casos de Uso y comandos. Cómo.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"El \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://sourcemaking.com/design_patterns/command\\\"}},[_vm._v(\\\"patrón comando\\\")]),_vm._v(\\\" nos ayuda a encapsular peticiones para realizar ciertas operaciones como logs, colas y filtrado.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Comenzamos con la interfaz:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"export interface Command<T> {\\\\n    execute(): Promise<T>\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Ahora podremos ver un comando específico, por ejemplo el que se usa para cargar este mismo artículo.\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"import { Command } from '../../infraestructure/Command'\\\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\\\nimport { Id } from '../../domain'\\\\nimport { Locale, Translator } from '../../domain/language'\\\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\\\nimport { TranslationService } from '../../domain/TranslationService'\\\\n\\\\nexport class GetArticle implements Command<Article> {\\\\n    private constructor(\\\\n        private readonly articlesRepository: ArticlesRepository,\\\\n        private readonly id: Id,\\\\n        private readonly locale: Locale\\\\n    ) {}\\\\n\\\\n    public async execute(): Promise<Article> {\\\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\\\n    }\\\\n\\\\n    public static create(context: { id: Id; locale: Locale }) {\\\\n        return new GetArticle(\\\\n            new ArticlesFileRepository(\\\\n                FileLoader.create(),\\\\n                TranslationService.create(Translator.create())\\\\n            ),\\\\n            context.id,\\\\n            context.locale\\\\n        )\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Este comando es responsable de obtener cierto artículo usando un \\\"),_c('a',{attrs:{\\\"href\\\":\\\"http://shawnmc.cool/the-repository-pattern\\\"}},[_vm._v(\\\"repositorio\\\")]),_vm._v(\\\", dónde y cómo lo haga es algo que no nos acontece a nosotros, ya que es responsabilidad de otra clase.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"El comando representa un \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://en.wikipedia.org/wiki/Use_case\\\"}},[_vm._v(\\\"Caso de Uso\\\")]),_vm._v(\\\" de mi aplicación. Ahora mismo solamente necesito recoger el artículo del repositorio pero podría desarrollar una nueva funcionalidad donde se podría gestionar el si el usuario ha leído el artículo ya o si el usuario es PRO y por tanto puede leer todos los artículos en vez de unos pocos.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"¿Quién construye el comando? Pues quien lo use:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"const article = await GetArticle.create({\\\\n    id: 'use-cases-and-commands',\\\\n    locale: Locale.EN\\\\n}).execute()\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Estoy usando \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://en.wikipedia.org/wiki/Inversion_of_control\\\"}},[_vm._v(\\\"inversion de control\\\")]),_vm._v(\\\" para proveer de las dependencias necesarias para que el case de uso GetArticle funcione. Esto lo hago mediante un función constructura (si fuese muy complejo construir este caso de uso nos crearíamos una \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://sourcemaking.com/design_patterns/factory_method\\\"}},[_vm._v(\\\"factoría\\\")]),_vm._v(\\\"):\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"public static create(context: { id: Id; locale: Locale }) {\\\\n    return new GetArticle(\\\\n        new ArticlesFileRepository(\\\\n          FileLoader.create(),\\\\n          TranslationService.create(Translator.create())\\\\n        ),\\\\n        context.id,\\\\n        context.locale\\\\n    )\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"En este caso estoy pasando de una abstracción (ArticlesRepository) a una concreción (ArticlesFileRepository). Si mañana decido que mis artículos vendrán via API únicamente tendré que cambiar el método factoría.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Lo que también es interesante de los comando es que son fáciles de extender. Por ejemplo podemos dejar una traza cada vez que un comando sea ejecutado usando el \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://sourcemaking.com/design_patterns/decorator\\\"}},[_vm._v(\\\"patrón decorador\\\")]),_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"import { Command } from './Command'\\\\nimport { Logger } from './Logger'\\\\n\\\\nexport class LoggerCommandDecorator<T> implements Command<T> {\\\\n    public constructor(\\\\n        private readonly decoratedCommand: Command<T>,\\\\n        private readonly logger: Logger\\\\n    ) {}\\\\n\\\\n    public execute(): Promise<T> {\\\\n        this.logger.log(\\\\n            (this.decoratedCommand as Object).constructor.name +\\\\n                ' - ' +\\\\n                Object.getOwnPropertyNames(this.decoratedCommand)\\\\n        )\\\\n        return this.decoratedCommand.execute()\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Después, usando un \\\"),_c('code',{pre:true},[_vm._v(\\\"UserCaseDecorator\\\")]),_vm._v(\\\" especifico qué decoradores quiero aplicar para \\\"),_c('strong',[_vm._v(\\\"todos mis casos de uso\\\")]),_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"import { Command } from '../../infraestructure/Command'\\\\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\\\\nimport { Logger } from '../../infraestructure/Logger'\\\\n\\\\nexport class UseCaseDecorator {\\\\n    private static readonly logger = Logger.create({\\\\n        // eslint-disable-next-line\\\\n        stdout: { error: console.error, info: console.log, warn: console.warn }\\\\n    })\\\\n\\\\n    public static decorate<T>(command: Command<T>) {\\\\n        return new LoggerCommandDecorator<T>(command, UseCaseDecorator.logger)\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Y después en cada Caso de Uso usamos el \\\"),_c('code',{pre:true},[_vm._v(\\\"UseCaseDecorator\\\")]),_vm._v(\\\" de esta forma:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"import { Command } from '../../infraestructure/Command'\\\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\\\nimport { Id } from '../../domain'\\\\nimport { Locale, Translator } from '../../domain/language'\\\\nimport { UseCaseDecorator } from './UseCaseDecorator'\\\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\\\nimport { TranslationService } from '../../domain/TranslationService'\\\\n\\\\nexport class GetArticle implements Command<Article> {\\\\n    private constructor(\\\\n        private readonly articlesRepository: ArticlesRepository,\\\\n        private readonly id: Id,\\\\n        private readonly locale: Locale\\\\n    ) {}\\\\n\\\\n    public async execute(): Promise<Article> {\\\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\\\n    }\\\\n\\\\n    public static create(context: { id: Id; locale: Locale }) {\\\\n        return UseCaseDecorator.decorate(\\\\n            new GetArticle(\\\\n                new ArticlesFileRepository(\\\\n                    FileLoader.create(),\\\\n                    TranslationService.create(Translator.create())\\\\n                ),\\\\n                context.id,\\\\n                context.locale\\\\n            )\\\\n        )\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Y podríamos crear todos los decaradores que se nos ocurran y usando composición podemos dar más y más comportamiento a nuestros comandos.\\\")])]) }]\",\n        component: {\n          data: function () {\n            return {\n              templateRender: null\n            }\n          },\n          render: function (createElement) {\n            return this.templateRender ? this.templateRender() : createElement(\"div\", \"Rendering\");\n          },\n          created: function () {\n            this.templateRender = function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) };\n            this.$options.staticRenderFns = [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dynamicContent\"},[_c('p',[_vm._v(\"Casos de Uso y comandos. Cómo.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"El \"),_c('a',{attrs:{\"href\":\"https://sourcemaking.com/design_patterns/command\"}},[_vm._v(\"patrón comando\")]),_vm._v(\" nos ayuda a encapsular peticiones para realizar ciertas operaciones como logs, colas y filtrado.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Comenzamos con la interfaz:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"export interface Command<T> {\\n    execute(): Promise<T>\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Ahora podremos ver un comando específico, por ejemplo el que se usa para cargar este mismo artículo.\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"import { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command<Article> {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise<Article> {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return new GetArticle(\\n            new ArticlesFileRepository(\\n                FileLoader.create(),\\n                TranslationService.create(Translator.create())\\n            ),\\n            context.id,\\n            context.locale\\n        )\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Este comando es responsable de obtener cierto artículo usando un \"),_c('a',{attrs:{\"href\":\"http://shawnmc.cool/the-repository-pattern\"}},[_vm._v(\"repositorio\")]),_vm._v(\", dónde y cómo lo haga es algo que no nos acontece a nosotros, ya que es responsabilidad de otra clase.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"El comando representa un \"),_c('a',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Use_case\"}},[_vm._v(\"Caso de Uso\")]),_vm._v(\" de mi aplicación. Ahora mismo solamente necesito recoger el artículo del repositorio pero podría desarrollar una nueva funcionalidad donde se podría gestionar el si el usuario ha leído el artículo ya o si el usuario es PRO y por tanto puede leer todos los artículos en vez de unos pocos.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"¿Quién construye el comando? Pues quien lo use:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"const article = await GetArticle.create({\\n    id: 'use-cases-and-commands',\\n    locale: Locale.EN\\n}).execute()\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Estoy usando \"),_c('a',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Inversion_of_control\"}},[_vm._v(\"inversion de control\")]),_vm._v(\" para proveer de las dependencias necesarias para que el case de uso GetArticle funcione. Esto lo hago mediante un función constructura (si fuese muy complejo construir este caso de uso nos crearíamos una \"),_c('a',{attrs:{\"href\":\"https://sourcemaking.com/design_patterns/factory_method\"}},[_vm._v(\"factoría\")]),_vm._v(\"):\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"public static create(context: { id: Id; locale: Locale }) {\\n    return new GetArticle(\\n        new ArticlesFileRepository(\\n          FileLoader.create(),\\n          TranslationService.create(Translator.create())\\n        ),\\n        context.id,\\n        context.locale\\n    )\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"En este caso estoy pasando de una abstracción (ArticlesRepository) a una concreción (ArticlesFileRepository). Si mañana decido que mis artículos vendrán via API únicamente tendré que cambiar el método factoría.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Lo que también es interesante de los comando es que son fáciles de extender. Por ejemplo podemos dejar una traza cada vez que un comando sea ejecutado usando el \"),_c('a',{attrs:{\"href\":\"https://sourcemaking.com/design_patterns/decorator\"}},[_vm._v(\"patrón decorador\")]),_vm._v(\":\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"import { Command } from './Command'\\nimport { Logger } from './Logger'\\n\\nexport class LoggerCommandDecorator<T> implements Command<T> {\\n    public constructor(\\n        private readonly decoratedCommand: Command<T>,\\n        private readonly logger: Logger\\n    ) {}\\n\\n    public execute(): Promise<T> {\\n        this.logger.log(\\n            (this.decoratedCommand as Object).constructor.name +\\n                ' - ' +\\n                Object.getOwnPropertyNames(this.decoratedCommand)\\n        )\\n        return this.decoratedCommand.execute()\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Después, usando un \"),_c('code',{pre:true},[_vm._v(\"UserCaseDecorator\")]),_vm._v(\" especifico qué decoradores quiero aplicar para \"),_c('strong',[_vm._v(\"todos mis casos de uso\")]),_vm._v(\":\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"import { Command } from '../../infraestructure/Command'\\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\\nimport { Logger } from '../../infraestructure/Logger'\\n\\nexport class UseCaseDecorator {\\n    private static readonly logger = Logger.create({\\n        // eslint-disable-next-line\\n        stdout: { error: console.error, info: console.log, warn: console.warn }\\n    })\\n\\n    public static decorate<T>(command: Command<T>) {\\n        return new LoggerCommandDecorator<T>(command, UseCaseDecorator.logger)\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Y después en cada Caso de Uso usamos el \"),_c('code',{pre:true},[_vm._v(\"UseCaseDecorator\")]),_vm._v(\" de esta forma:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"import { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { UseCaseDecorator } from './UseCaseDecorator'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command<Article> {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise<Article> {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return UseCaseDecorator.decorate(\\n            new GetArticle(\\n                new ArticlesFileRepository(\\n                    FileLoader.create(),\\n                    TranslationService.create(Translator.create())\\n                ),\\n                context.id,\\n                context.locale\\n            )\\n        )\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Y podríamos crear todos los decaradores que se nos ocurran y usando composición podemos dar más y más comportamiento a nuestros comandos.\")])]) }];\n          }\n        }\n      }\n     }","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","module.exports = __webpack_public_path__ + \"img/abstract-dark-design.e074f6fb.jpg\";","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var map = {\n\t\"./en/advanced-javascript-patterns.md\": [\n\t\t\"892f\"\n\t],\n\t\"./en/how-to-make-beautiful-software.md\": [\n\t\t\"a467\"\n\t],\n\t\"./es/advanced-javascript-patterns.md\": [\n\t\t\"b880\"\n\t],\n\t\"./es/how-to-make-beautiful-software.md\": [\n\t\t\"02aa\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"478c\";\nmodule.exports = webpackAsyncContext;","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","var map = {\n\t\"./advanced-javascript-patterns.md\": \"b880\",\n\t\"./how-to-make-beautiful-software.md\": \"02aa\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"5296\";","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","module.exports = __webpack_public_path__ + \"img/art-artistic-canvas.f768d788.jpg\";","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = { \n    body: \"Theming a web with custom properties is as easy as it gets as shown in this article.\\n\\n<!--more-->\\n\\nTheming is such an important aspect of web development, and even though your app or website might not require different themes we should develop our visual styles such as color, spacing, fonts and animations as if they were to change every day. Why? Because it is what changes most often. If done well, a rebranding, introducing a \\\"dark mode\\\" or adjusting colors will be super easy.\\n\\n> \\\"we should develop our visual styles such as color, spacing, fonts and animations as if they were to change every day.\\\"\\n\\n## Custom properties\\n\\nCSS's Custom properties are truly a gift. They open up so many possibilities because of their dynamic behaviour. We can create a new custom property in a given element as follows:\\n\\n```css\\n.class {\\n    --a-custom-property: 42px;\\n}\\n```\\n\\nNow every child of that element has access to this custom property:\\n\\n```css\\n.class-child {\\n    margin-bottom: var(--a-custom-property);\\n}\\n```\\n\\nWe can even set default values in case the property is not declared:\\n\\n```css\\n.class-child {\\n    margin-bottom: var(--a-custom-property, 12px);\\n}\\n```\\n\\nAnd what is even more amazing is that we can change dynamically the values of custom properties via CSS or JavaScript:\\n\\n```css\\n@media (max-width: 800px) {\\n    .class-child {\\n        --a-custom-property: 56px;\\n    }\\n}\\n```\\n\\n_Note: One would think that we can declare variables for the values of media queries but we can't, we'll have to wait until [env](https://developer.mozilla.org/en-US/docs/Web/CSS/env) lands in Edge and Internet Explorer to have full support (as of June 2019)._\\n\\n## Theming\\n\\nSo, using custom properties how can we theme an app? Well, we first start by creating a `colors.css` file:\\n\\n```css\\n:root {\\n    --white-color: hsla(0, 0%, 100%, 0.88);\\n    --white-light-color: hsl(0, 0%, 98%);\\n    --black-color: hsl(0, 1%, 15%);\\n    --dark-blue: hsl(222, 14%, 18%);\\n    --gray-color: hsl(150, 2%, 79%);\\n    --blue-color: hsl(229, 87%, 44%);\\n    --blue-light-color: hsl(206, 68%, 55%);\\n    --blue-dark-color: hsl(219, 16%, 16%);\\n    --teal-color: hsl(184, 97%, 37%);\\n    --orange-color: hsl(32, 100%, 50%);\\n}\\n```\\n\\n_Note: The `:root` selector targets the root element of a document._\\n\\nNow, if the color changes slightly to another one, we should change this file. But, should we still reference this in our components or CSSs? The answer is no, we should have another indirection. Imagine the following case. We declare in every component to use the custom property `--orange-color`. However, a new redesign requires a change of the main color of the app (which is the `--orange-color`) to a blue color. Now, in order to make it work we could do something like this:\\n\\n```css\\n:root {\\n    --orange-color: blue;\\n}\\n```\\n\\nBut this is so bad at so many levels. For one, we have names that don't represent what they stand for and can misguide developers. What if we create a new custom property `--real-blue: darkblue;`? This for sure will ensue madness.\\n\\nHow can we tackle this problem? The answer lies in a previous paragraph: \\\"requires a change of the main color of the app\\\". What we need to identify is the main color of the app, also known as **primary color**. After that we should identify a **secondary color** or other colors and what do they represent. We can handle all this in a new file called `palette.css`:\\n\\n```css\\n:root {\\n    --primary-color: var(--orange-color);\\n    --secondary-color: var(--teal-color);\\n}\\n```\\n\\nAnother thing I like to do is declare the foreground and background color, this allows me to create in a future a dark theme or a light theme:\\n\\n```css\\n:root {\\n    --foreground-color: var(--black-color);\\n    --background-color: var(--white-color);\\n}\\n```\\n\\nIn order to change to a dark color mode we can just swap the values:\\n\\n```css\\n:root {\\n    --foreground-color: var(--white-color);\\n    --background-color: var(--black-color);\\n}\\n```\\n\\n## Conclusion\\n\\nTheming as shown in this tutorial can save you a lot of headaches if done well. However we must be precise on what custom properties we assign to our components and try to identify as much as we can business concepts. For example, some error state can be represented today as red, so we should have an `--error-state-color: var(--red-color);` property and if it changes tomorrow we can do it easily `--error-state-color: var(--orange-color);`.\\n\",\n    html: \"<p>Theming a web with custom properties is as easy as it gets as shown in this article.</p>\\n<!--more-->\\n<p>Theming is such an important aspect of web development, and even though your app or website might not require different themes we should develop our visual styles such as color, spacing, fonts and animations as if they were to change every day. Why? Because it is what changes most often. If done well, a rebranding, introducing a &quot;dark mode&quot; or adjusting colors will be super easy.</p>\\n<blockquote>\\n<p>&quot;we should develop our visual styles such as color, spacing, fonts and animations as if they were to change every day.&quot;</p>\\n</blockquote>\\n<h2>Custom properties</h2>\\n<p>CSS's Custom properties are truly a gift. They open up so many possibilities because of their dynamic behaviour. We can create a new custom property in a given element as follows:</p>\\n<pre><code class=\\\"language-css\\\">.class {\\n    --a-custom-property: 42px;\\n}\\n</code></pre>\\n<p>Now every child of that element has access to this custom property:</p>\\n<pre><code class=\\\"language-css\\\">.class-child {\\n    margin-bottom: var(--a-custom-property);\\n}\\n</code></pre>\\n<p>We can even set default values in case the property is not declared:</p>\\n<pre><code class=\\\"language-css\\\">.class-child {\\n    margin-bottom: var(--a-custom-property, 12px);\\n}\\n</code></pre>\\n<p>And what is even more amazing is that we can change dynamically the values of custom properties via CSS or JavaScript:</p>\\n<pre><code class=\\\"language-css\\\">@media (max-width: 800px) {\\n    .class-child {\\n        --a-custom-property: 56px;\\n    }\\n}\\n</code></pre>\\n<p><em>Note: One would think that we can declare variables for the values of media queries but we can't, we'll have to wait until <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/env\\\">env</a> lands in Edge and Internet Explorer to have full support (as of June 2019).</em></p>\\n<h2>Theming</h2>\\n<p>So, using custom properties how can we theme an app? Well, we first start by creating a <code>colors.css</code> file:</p>\\n<pre><code class=\\\"language-css\\\">:root {\\n    --white-color: hsla(0, 0%, 100%, 0.88);\\n    --white-light-color: hsl(0, 0%, 98%);\\n    --black-color: hsl(0, 1%, 15%);\\n    --dark-blue: hsl(222, 14%, 18%);\\n    --gray-color: hsl(150, 2%, 79%);\\n    --blue-color: hsl(229, 87%, 44%);\\n    --blue-light-color: hsl(206, 68%, 55%);\\n    --blue-dark-color: hsl(219, 16%, 16%);\\n    --teal-color: hsl(184, 97%, 37%);\\n    --orange-color: hsl(32, 100%, 50%);\\n}\\n</code></pre>\\n<p><em>Note: The <code>:root</code> selector targets the root element of a document.</em></p>\\n<p>Now, if the color changes slightly to another one, we should change this file. But, should we still reference this in our components or CSSs? The answer is no, we should have another indirection. Imagine the following case. We declare in every component to use the custom property <code>--orange-color</code>. However, a new redesign requires a change of the main color of the app (which is the <code>--orange-color</code>) to a blue color. Now, in order to make it work we could do something like this:</p>\\n<pre><code class=\\\"language-css\\\">:root {\\n    --orange-color: blue;\\n}\\n</code></pre>\\n<p>But this is so bad at so many levels. For one, we have names that don't represent what they stand for and can misguide developers. What if we create a new custom property <code>--real-blue: darkblue;</code>? This for sure will ensue madness.</p>\\n<p>How can we tackle this problem? The answer lies in a previous paragraph: &quot;requires a change of the main color of the app&quot;. What we need to identify is the main color of the app, also known as <strong>primary color</strong>. After that we should identify a <strong>secondary color</strong> or other colors and what do they represent. We can handle all this in a new file called <code>palette.css</code>:</p>\\n<pre><code class=\\\"language-css\\\">:root {\\n    --primary-color: var(--orange-color);\\n    --secondary-color: var(--teal-color);\\n}\\n</code></pre>\\n<p>Another thing I like to do is declare the foreground and background color, this allows me to create in a future a dark theme or a light theme:</p>\\n<pre><code class=\\\"language-css\\\">:root {\\n    --foreground-color: var(--black-color);\\n    --background-color: var(--white-color);\\n}\\n</code></pre>\\n<p>In order to change to a dark color mode we can just swap the values:</p>\\n<pre><code class=\\\"language-css\\\">:root {\\n    --foreground-color: var(--white-color);\\n    --background-color: var(--black-color);\\n}\\n</code></pre>\\n<h2>Conclusion</h2>\\n<p>Theming as shown in this tutorial can save you a lot of headaches if done well. However we must be precise on what custom properties we assign to our components and try to identify as much as we can business concepts. For example, some error state can be represented today as red, so we should have an <code>--error-state-color: var(--red-color);</code> property and if it changes tomorrow we can do it easily <code>--error-state-color: var(--orange-color);</code>.</p>\\n\",\n    attributes: {\"title\":\"Theming\",\"date\":\"2019-06-06T00:00:00.000Z\",\"locale\":\"en\",\"image\":\"art-artistic-canvas.jpg\"},\n      vue: {\n        render: \"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }\",\n        staticRenderFns: \"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"dynamicContent\\\"},[_c('p',[_vm._v(\\\"Theming a web with custom properties is as easy as it gets as shown in this article.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Theming is such an important aspect of web development, and even though your app or website might not require different themes we should develop our visual styles such as color, spacing, fonts and animations as if they were to change every day. Why? Because it is what changes most often. If done well, a rebranding, introducing a \\\\\\\"dark mode\\\\\\\" or adjusting colors will be super easy.\\\")]),_vm._v(\\\" \\\"),_c('blockquote',[_c('p',[_vm._v(\\\"\\\\\\\"we should develop our visual styles such as color, spacing, fonts and animations as if they were to change every day.\\\\\\\"\\\")])]),_vm._v(\\\" \\\"),_c('h2',[_vm._v(\\\"Custom properties\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"CSS's Custom properties are truly a gift. They open up so many possibilities because of their dynamic behaviour. We can create a new custom property in a given element as follows:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\".class {\\\\n    --a-custom-property: 42px;\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Now every child of that element has access to this custom property:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\".class-child {\\\\n    margin-bottom: var(--a-custom-property);\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"We can even set default values in case the property is not declared:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\".class-child {\\\\n    margin-bottom: var(--a-custom-property, 12px);\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"And what is even more amazing is that we can change dynamically the values of custom properties via CSS or JavaScript:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\"@media (max-width: 800px) {\\\\n    .class-child {\\\\n        --a-custom-property: 56px;\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_c('em',[_vm._v(\\\"Note: One would think that we can declare variables for the values of media queries but we can't, we'll have to wait until \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://developer.mozilla.org/en-US/docs/Web/CSS/env\\\"}},[_vm._v(\\\"env\\\")]),_vm._v(\\\" lands in Edge and Internet Explorer to have full support (as of June 2019).\\\")])]),_vm._v(\\\" \\\"),_c('h2',[_vm._v(\\\"Theming\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"So, using custom properties how can we theme an app? Well, we first start by creating a \\\"),_c('code',{pre:true},[_vm._v(\\\"colors.css\\\")]),_vm._v(\\\" file:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\":root {\\\\n    --white-color: hsla(0, 0%, 100%, 0.88);\\\\n    --white-light-color: hsl(0, 0%, 98%);\\\\n    --black-color: hsl(0, 1%, 15%);\\\\n    --dark-blue: hsl(222, 14%, 18%);\\\\n    --gray-color: hsl(150, 2%, 79%);\\\\n    --blue-color: hsl(229, 87%, 44%);\\\\n    --blue-light-color: hsl(206, 68%, 55%);\\\\n    --blue-dark-color: hsl(219, 16%, 16%);\\\\n    --teal-color: hsl(184, 97%, 37%);\\\\n    --orange-color: hsl(32, 100%, 50%);\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_c('em',[_vm._v(\\\"Note: The \\\"),_c('code',{pre:true},[_vm._v(\\\":root\\\")]),_vm._v(\\\" selector targets the root element of a document.\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Now, if the color changes slightly to another one, we should change this file. But, should we still reference this in our components or CSSs? The answer is no, we should have another indirection. Imagine the following case. We declare in every component to use the custom property \\\"),_c('code',{pre:true},[_vm._v(\\\"--orange-color\\\")]),_vm._v(\\\". However, a new redesign requires a change of the main color of the app (which is the \\\"),_c('code',{pre:true},[_vm._v(\\\"--orange-color\\\")]),_vm._v(\\\") to a blue color. Now, in order to make it work we could do something like this:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\":root {\\\\n    --orange-color: blue;\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"But this is so bad at so many levels. For one, we have names that don't represent what they stand for and can misguide developers. What if we create a new custom property \\\"),_c('code',{pre:true},[_vm._v(\\\"--real-blue: darkblue;\\\")]),_vm._v(\\\"? This for sure will ensue madness.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"How can we tackle this problem? The answer lies in a previous paragraph: \\\\\\\"requires a change of the main color of the app\\\\\\\". What we need to identify is the main color of the app, also known as \\\"),_c('strong',[_vm._v(\\\"primary color\\\")]),_vm._v(\\\". After that we should identify a \\\"),_c('strong',[_vm._v(\\\"secondary color\\\")]),_vm._v(\\\" or other colors and what do they represent. We can handle all this in a new file called \\\"),_c('code',{pre:true},[_vm._v(\\\"palette.css\\\")]),_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\":root {\\\\n    --primary-color: var(--orange-color);\\\\n    --secondary-color: var(--teal-color);\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Another thing I like to do is declare the foreground and background color, this allows me to create in a future a dark theme or a light theme:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\":root {\\\\n    --foreground-color: var(--black-color);\\\\n    --background-color: var(--white-color);\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"In order to change to a dark color mode we can just swap the values:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-css\\\"}},[_vm._v(\\\":root {\\\\n    --foreground-color: var(--white-color);\\\\n    --background-color: var(--black-color);\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('h2',[_vm._v(\\\"Conclusion\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Theming as shown in this tutorial can save you a lot of headaches if done well. However we must be precise on what custom properties we assign to our components and try to identify as much as we can business concepts. For example, some error state can be represented today as red, so we should have an \\\"),_c('code',{pre:true},[_vm._v(\\\"--error-state-color: var(--red-color);\\\")]),_vm._v(\\\" property and if it changes tomorrow we can do it easily \\\"),_c('code',{pre:true},[_vm._v(\\\"--error-state-color: var(--orange-color);\\\")]),_vm._v(\\\".\\\")])]) }]\",\n        component: {\n          data: function () {\n            return {\n              templateRender: null\n            }\n          },\n          render: function (createElement) {\n            return this.templateRender ? this.templateRender() : createElement(\"div\", \"Rendering\");\n          },\n          created: function () {\n            this.templateRender = function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) };\n            this.$options.staticRenderFns = [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dynamicContent\"},[_c('p',[_vm._v(\"Theming a web with custom properties is as easy as it gets as shown in this article.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Theming is such an important aspect of web development, and even though your app or website might not require different themes we should develop our visual styles such as color, spacing, fonts and animations as if they were to change every day. Why? Because it is what changes most often. If done well, a rebranding, introducing a \\\"dark mode\\\" or adjusting colors will be super easy.\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"\\\"we should develop our visual styles such as color, spacing, fonts and animations as if they were to change every day.\\\"\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"Custom properties\")]),_vm._v(\" \"),_c('p',[_vm._v(\"CSS's Custom properties are truly a gift. They open up so many possibilities because of their dynamic behaviour. We can create a new custom property in a given element as follows:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\".class {\\n    --a-custom-property: 42px;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Now every child of that element has access to this custom property:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\".class-child {\\n    margin-bottom: var(--a-custom-property);\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"We can even set default values in case the property is not declared:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\".class-child {\\n    margin-bottom: var(--a-custom-property, 12px);\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"And what is even more amazing is that we can change dynamically the values of custom properties via CSS or JavaScript:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\"@media (max-width: 800px) {\\n    .class-child {\\n        --a-custom-property: 56px;\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('em',[_vm._v(\"Note: One would think that we can declare variables for the values of media queries but we can't, we'll have to wait until \"),_c('a',{attrs:{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/CSS/env\"}},[_vm._v(\"env\")]),_vm._v(\" lands in Edge and Internet Explorer to have full support (as of June 2019).\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"Theming\")]),_vm._v(\" \"),_c('p',[_vm._v(\"So, using custom properties how can we theme an app? Well, we first start by creating a \"),_c('code',{pre:true},[_vm._v(\"colors.css\")]),_vm._v(\" file:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\":root {\\n    --white-color: hsla(0, 0%, 100%, 0.88);\\n    --white-light-color: hsl(0, 0%, 98%);\\n    --black-color: hsl(0, 1%, 15%);\\n    --dark-blue: hsl(222, 14%, 18%);\\n    --gray-color: hsl(150, 2%, 79%);\\n    --blue-color: hsl(229, 87%, 44%);\\n    --blue-light-color: hsl(206, 68%, 55%);\\n    --blue-dark-color: hsl(219, 16%, 16%);\\n    --teal-color: hsl(184, 97%, 37%);\\n    --orange-color: hsl(32, 100%, 50%);\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_c('em',[_vm._v(\"Note: The \"),_c('code',{pre:true},[_vm._v(\":root\")]),_vm._v(\" selector targets the root element of a document.\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Now, if the color changes slightly to another one, we should change this file. But, should we still reference this in our components or CSSs? The answer is no, we should have another indirection. Imagine the following case. We declare in every component to use the custom property \"),_c('code',{pre:true},[_vm._v(\"--orange-color\")]),_vm._v(\". However, a new redesign requires a change of the main color of the app (which is the \"),_c('code',{pre:true},[_vm._v(\"--orange-color\")]),_vm._v(\") to a blue color. Now, in order to make it work we could do something like this:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\":root {\\n    --orange-color: blue;\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"But this is so bad at so many levels. For one, we have names that don't represent what they stand for and can misguide developers. What if we create a new custom property \"),_c('code',{pre:true},[_vm._v(\"--real-blue: darkblue;\")]),_vm._v(\"? This for sure will ensue madness.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"How can we tackle this problem? The answer lies in a previous paragraph: \\\"requires a change of the main color of the app\\\". What we need to identify is the main color of the app, also known as \"),_c('strong',[_vm._v(\"primary color\")]),_vm._v(\". After that we should identify a \"),_c('strong',[_vm._v(\"secondary color\")]),_vm._v(\" or other colors and what do they represent. We can handle all this in a new file called \"),_c('code',{pre:true},[_vm._v(\"palette.css\")]),_vm._v(\":\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\":root {\\n    --primary-color: var(--orange-color);\\n    --secondary-color: var(--teal-color);\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Another thing I like to do is declare the foreground and background color, this allows me to create in a future a dark theme or a light theme:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\":root {\\n    --foreground-color: var(--black-color);\\n    --background-color: var(--white-color);\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"In order to change to a dark color mode we can just swap the values:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-css\"}},[_vm._v(\":root {\\n    --foreground-color: var(--white-color);\\n    --background-color: var(--black-color);\\n}\\n\")])]),_vm._v(\" \"),_c('h2',[_vm._v(\"Conclusion\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Theming as shown in this tutorial can save you a lot of headaches if done well. However we must be precise on what custom properties we assign to our components and try to identify as much as we can business concepts. For example, some error state can be represented today as red, so we should have an \"),_c('code',{pre:true},[_vm._v(\"--error-state-color: var(--red-color);\")]),_vm._v(\" property and if it changes tomorrow we can do it easily \"),_c('code',{pre:true},[_vm._v(\"--error-state-color: var(--orange-color);\")]),_vm._v(\".\")])]) }];\n          }\n        }\n      }\n     }","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","module.exports = { \n    body: \"When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of **design patterns** applied to JavaScript, looking through some of the cutting edge properties of ES6 such as **Proxies** and **default function parameter expressions**, dealing with **objects** and even some examples of **functional programming**. This talk is not allowed for cardiacs.\\n\",\n    html: \"<p>When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of <strong>design patterns</strong> applied to JavaScript, looking through some of the cutting edge properties of ES6 such as <strong>Proxies</strong> and <strong>default function parameter expressions</strong>, dealing with <strong>objects</strong> and even some examples of <strong>functional programming</strong>. This talk is not allowed for cardiacs.</p>\\n\",\n    attributes: {\"title\":\"Advanced JavaScript Patterns\",\"length\":45,\"difficulty\":\"Advanced\",\"language\":\"en\",\"topics\":[\"Proxies\",\"JavaScript\"],\"events\":[{\"name\":\"JSDay Canarias\",\"date\":\"2019-09-25T00:00:00.000Z\"}]},\n      vue: {\n        render: \"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }\",\n        staticRenderFns: \"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"dynamicContent\\\"},[_c('p',[_vm._v(\\\"When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of \\\"),_c('strong',[_vm._v(\\\"design patterns\\\")]),_vm._v(\\\" applied to JavaScript, looking through some of the cutting edge properties of ES6 such as \\\"),_c('strong',[_vm._v(\\\"Proxies\\\")]),_vm._v(\\\" and \\\"),_c('strong',[_vm._v(\\\"default function parameter expressions\\\")]),_vm._v(\\\", dealing with \\\"),_c('strong',[_vm._v(\\\"objects\\\")]),_vm._v(\\\" and even some examples of \\\"),_c('strong',[_vm._v(\\\"functional programming\\\")]),_vm._v(\\\". This talk is not allowed for cardiacs.\\\")])]) }]\",\n        component: {\n          data: function () {\n            return {\n              templateRender: null\n            }\n          },\n          render: function (createElement) {\n            return this.templateRender ? this.templateRender() : createElement(\"div\", \"Rendering\");\n          },\n          created: function () {\n            this.templateRender = function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) };\n            this.$options.staticRenderFns = [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dynamicContent\"},[_c('p',[_vm._v(\"When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of \"),_c('strong',[_vm._v(\"design patterns\")]),_vm._v(\" applied to JavaScript, looking through some of the cutting edge properties of ES6 such as \"),_c('strong',[_vm._v(\"Proxies\")]),_vm._v(\" and \"),_c('strong',[_vm._v(\"default function parameter expressions\")]),_vm._v(\", dealing with \"),_c('strong',[_vm._v(\"objects\")]),_vm._v(\" and even some examples of \"),_c('strong',[_vm._v(\"functional programming\")]),_vm._v(\". This talk is not allowed for cardiacs.\")])]) }];\n          }\n        }\n      }\n     }","var map = {\n\t\"./use-cases-and-commands.md\": \"391e\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"898a\";","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export enum Language {\n  SPANISH,\n  ENGLISH\n}\n","import { Markdown } from '../Markdown'\nimport { Length } from '../Length'\nimport { Difficulty } from './Difficulty'\nimport { Language } from './Language'\nimport { Topic } from './Topic'\nimport { Reference } from './Reference'\nimport { Id } from '../Id'\nimport { Event } from './Event'\n\nexport class Talk {\n  private constructor(\n    public readonly id: Id,\n    public readonly title: string,\n    public readonly abstract: Markdown,\n    public readonly length: Length,\n    public readonly difficulty: Difficulty,\n    public readonly language: Language,\n    public readonly topics: Topic[],\n    public readonly references: Reference[],\n    public readonly events: Event[]\n  ) {}\n\n  public static create(talk: {\n    id: Id\n    title: string\n    abstract: Markdown\n    length: Length\n    difficulty: Difficulty\n    language: Language\n    topics: Topic[]\n    references: Reference[]\n    events: Event[]\n  }) {\n    return new Talk(\n      talk.id,\n      talk.title,\n      talk.abstract,\n      talk.length,\n      talk.difficulty,\n      talk.language,\n      talk.topics,\n      talk.references,\n      talk.events\n    )\n  }\n}\n","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export class FileLoader {\n  private constructor() {}\n\n  public loadArticles(): string[] {\n    const spanishArticles = require.context(`./../domain/articles/es`).keys()\n    const englishArticles = require.context(`./../domain/articles/en`).keys()\n    return Array.from(new Set([...spanishArticles, ...englishArticles]))\n  }\n\n  public loadTalks(): string[] {\n    const spanishTalks = require.context(`./../domain/talks/es`).keys()\n    const englishTalks = require.context(`./../domain/talks/en`).keys()\n    return Array.from(new Set([...spanishTalks, ...englishTalks]))\n  }\n\n  public static create() {\n    return new FileLoader()\n  }\n}\n","import { Datetime } from '../../infraestructure/Datetime'\n\nexport class Event {\n  private constructor(public readonly name: string, public readonly datetime: Datetime) {}\n\n  public static create(options: { name: string; datetime: Datetime }) {\n    return new Event(options.name, options.datetime)\n  }\n}\n","export type CallbackFunction<T = unknown> = (...params: unknown[]) => T\n\nexport class Maybe<T> {\n  public static some<T>(value: T): Maybe<T> {\n    if (!this.isValid(value)) {\n      throw Error('Provided value must not be empty')\n    }\n    return new Maybe(value)\n  }\n\n  public static none<T>(): Maybe<T> {\n    return new Maybe<T>(null)\n  }\n\n  public static fromValue<T>(value: T | undefined | null): Maybe<T> {\n    return this.isValid(value) ? Maybe.some(value as T) : Maybe.none<T>()\n  }\n\n  private constructor(private value: T | null) {}\n\n  public get(): T {\n    if (!this.has()) {\n      throw new Error(\n        \"It  doesn't have a value. Make sure it has a value first by using .has method\"\n      )\n    }\n    return this.value as T\n  }\n\n  public getOrElse(defaultValue: T): T {\n    return this.value === null ? defaultValue : this.value\n  }\n\n  public getOrExecute(defaultValue: CallbackFunction<T>): T {\n    return this.value === null ? defaultValue() : this.value\n  }\n\n  public getOrThrow(error: Error): T {\n    return this.value === null\n      ? (() => {\n          throw error\n        })()\n      : this.value\n  }\n\n  public has(): boolean {\n    return this.value !== null\n  }\n\n  public map<R>(f: (wrapped: T) => R): Maybe<R> {\n    if (this.value === null) {\n      return Maybe.none<R>()\n    } else {\n      return Maybe.some(f(this.value))\n    }\n  }\n\n  public flatMap<R>(f: (wrapped: T) => Maybe<R>): Maybe<R> {\n    if (this.value === null) {\n      return Maybe.none<R>()\n    } else {\n      return f(this.value)\n    }\n  }\n\n  private static isNumberZero<R>(value: R): boolean {\n    return typeof value === 'number' && value === 0\n  }\n\n  private static isValid(value: unknown | null | undefined): boolean {\n    return !!value || this.isNumberZero(value)\n  }\n}\n","import { Language } from './Language'\n\nexport class LanguageService {\n  public toLanguage(string: string): Language {\n    switch (string.toLowerCase()) {\n      case 'es':\n        return Language.SPANISH\n      case 'en':\n        return Language.ENGLISH\n      default:\n        throw new Error('Language could not be found')\n    }\n  }\n\n  public static create() {\n    return new LanguageService()\n  }\n}\n","export class Topic {\n  private constructor(private readonly _value: string) {}\n\n  public static fromValue(label: string) {\n    return new Topic(label)\n  }\n\n  get value(): string {\n    return this._value\n  }\n}\n","import { TalksRepository } from '../../domain/talks/TalksRepository'\nimport { Talk } from '../../domain/talks'\nimport { Locale, Translator } from '../../domain/language'\nimport { Id, Markdown } from '../../domain'\nimport { FileLoader } from '../FileLoader'\nimport { Length } from '../../domain/Length'\nimport { DifficultyService } from '../../domain/DifficultyService'\nimport { TranslationService } from '../../domain/TranslationService'\nimport { Event } from '../../domain/talks/Event'\nimport { Datetime } from '../Datetime'\nimport { Maybe } from '../Maybe'\nimport { LanguageService } from '../../domain/talks/LanguageService'\nimport { Topic } from '../../domain/talks/Topic'\n\ninterface TalkFile {\n  body: string\n  attributes: {\n    title: string\n    length: number\n    difficulty: string\n    language: string\n    topics: string[]\n    events: { name: string; date: string }[]\n  }\n}\n\nexport class TalksFileRepository implements TalksRepository {\n  public constructor(\n    private readonly fileLoader: FileLoader,\n    private readonly translationService: TranslationService,\n    private readonly languageService: LanguageService\n  ) {}\n\n  public static create() {\n    return new TalksFileRepository(\n      FileLoader.create(),\n      TranslationService.create(Translator.create()),\n      LanguageService.create()\n    )\n  }\n\n  public async findOneByLocale(id: Id, locale: Locale): Promise<Talk> {\n    let talk: TalkFile\n\n    try {\n      talk = await import(`./../../domain/talks/${this.translationService.toString(locale)}/${\n        id.value\n      }.md`)\n    } catch (e) {\n      const locale = this.translationService.toString(Locale.DEFAULT)\n      talk = await import(`./../../domain/talks/${locale}/${id.value}.md`)\n    }\n\n    return Talk.create({\n      id,\n      language: this.languageService.toLanguage(talk.attributes.language),\n      title: talk.attributes.title,\n      abstract: Markdown.fromValue(talk.body),\n      references: [],\n      length: Length.fromMinutes(talk.attributes.length),\n      difficulty: DifficultyService.create().toDifficulty(talk.attributes.difficulty),\n      topics: talk.attributes.topics.map(topic => Topic.fromValue(topic)),\n      events: Maybe.fromValue(talk.attributes.events)\n        .getOrElse([])\n        .map(event =>\n          Event.create({\n            name: event.name,\n            datetime: Datetime.fromString(event.date)\n          })\n        )\n    })\n  }\n\n  public async findAllByLocale(locale: Locale): Promise<Talk[]> {\n    const talksIds = this.fileLoader\n      .loadTalks()\n      .map(id => id.substr(2, id.length).substr(0, id.length - 5))\n\n    return Promise.all(talksIds.map(id => this.findOneByLocale(Id.fromValue(id), locale)))\n  }\n}\n","import { Command } from './Command'\nimport { Logger } from './Logger'\n\nexport class LoggerCommandDecorator<T> implements Command<T> {\n  public constructor(\n    private readonly decoratedCommand: Command<T>,\n    private readonly logger: Logger\n  ) {}\n\n  public execute(): Promise<T> {\n    this.logger.log(\n      (this.decoratedCommand as Object).constructor.name +\n        ' - ' +\n        Object.getOwnPropertyNames(this.decoratedCommand)\n    )\n    return this.decoratedCommand.execute()\n  }\n}\n","import { Datetime } from './Datetime'\n\ntype Message = string | number\ntype Level = 'warning' | 'error' | 'info'\ntype Log = (message: Message) => void\ntype Stdout = {\n  error: Log\n  info: Log\n  warn: Log\n}\n\nexport class Logger {\n  private constructor(private readonly stdout: Stdout) {}\n\n  public log(message: Message, _options: { level: Level } = { level: 'info' }) {\n    this.stdout.info(`[${Datetime.fromNow()}] ${message}`)\n  }\n\n  public static create(options: { stdout: Stdout }) {\n    return new Logger(options.stdout)\n  }\n}\n","import { Command } from '../../infraestructure/Command'\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\nimport { Logger } from '../../infraestructure/Logger'\n\nexport class UseCaseDecorator {\n  public constructor(private readonly logger: Logger) {}\n\n  public decorate<T>(command: Command<T>) {\n    return new LoggerCommandDecorator<T>(command, this.logger)\n  }\n\n  public static create() {\n    return new UseCaseDecorator(\n      Logger.create({\n        // eslint-disable-next-line\n        stdout: { error: console.error, info: console.log, warn: console.warn }\n      })\n    )\n  }\n}\n","import { Talk } from '../../domain/talks'\nimport { Command } from '../../infraestructure/Command'\nimport { TalksRepository } from '../../domain/talks/TalksRepository'\nimport { Locale } from '../../domain/language'\nimport { TalksFileRepository } from '../../infraestructure/talks/TalksFileRepository'\nimport { UseCaseDecorator } from './UseCaseDecorator'\n\nexport class GetTalksGiven implements Command<Talk[]> {\n  public constructor(\n    private readonly talksRepository: TalksRepository,\n    private readonly locale: Locale\n  ) {}\n\n  public async execute(): Promise<Talk[]> {\n    return this.talksRepository.findAllByLocale(this.locale)\n  }\n\n  public static create(context: { locale: Locale }) {\n    return UseCaseDecorator.create().decorate(\n      new GetTalksGiven(TalksFileRepository.create(), context.locale)\n    )\n  }\n}\n","import { Article, ArticlesRepository, Id, Markdown } from '../../domain/articles'\nimport { Locale, Translator } from '../../domain/language'\nimport { Datetime } from '../Datetime'\nimport { FileLoader } from '../FileLoader'\nimport { TranslationService } from '../../domain/TranslationService'\n\nexport class ArticlesFileRepository implements ArticlesRepository {\n  public constructor(\n    private readonly fileLoader: FileLoader,\n    private readonly translationService: TranslationService\n  ) {}\n\n  public static create() {\n    return new ArticlesFileRepository(\n      FileLoader.create(),\n      TranslationService.create(Translator.create())\n    )\n  }\n\n  public async findOneByLocale(id: Id, locale: Locale): Promise<Article> {\n    let article: any\n\n    try {\n      article = await import(`./../../domain/articles/${this.translationService.toString(locale)}/${\n        id.value\n      }.md`)\n    } catch (e) {\n      const locale = this.translationService.toString(Locale.DEFAULT)\n      article = await import(`./../../domain/articles/${locale}/${id.value}.md`)\n    }\n\n    return Article.create({\n      id,\n      body: Markdown.fromValue(article.body),\n      date: Datetime.fromString(article.attributes.date),\n      title: article.attributes.title,\n      locale: this.translationService.toLocale(article.attributes.locale),\n      image: require(`./../../domain/articles/assets/${article.attributes.image}`)\n    })\n  }\n\n  public async findAllByLocale(locale: Locale): Promise<Article[]> {\n    const articlesIds = this.fileLoader\n      .loadArticles()\n      .map(id => id.substr(2, id.length).substr(0, id.length - 5))\n\n    return Promise.all(articlesIds.map(id => this.findOneByLocale(Id.fromValue(id), locale)))\n  }\n}\n","import { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Id } from '../../domain'\nimport { Locale } from '../../domain/language'\nimport { UseCaseDecorator } from './UseCaseDecorator'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\n\nexport class GetArticle implements Command<Article> {\n  public constructor(\n    private readonly articlesRepository: ArticlesRepository,\n    private readonly id: Id,\n    private readonly locale: Locale\n  ) {}\n\n  public async execute(): Promise<Article> {\n    return this.articlesRepository.findOneByLocale(this.id, this.locale)\n  }\n\n  public static create(context: { id: Id; locale: Locale }) {\n    return UseCaseDecorator.create().decorate(\n      new GetArticle(ArticlesFileRepository.create(), context.id, context.locale)\n    )\n  }\n}\n","import { Command } from '../../infraestructure/Command'\nimport { Article, ArticlesRepository } from '../../domain/articles'\nimport { Locale } from '../../domain/language'\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\nimport { UseCaseDecorator } from './UseCaseDecorator'\n\nexport class GetAllArticles implements Command<Article[]> {\n  public constructor(\n    private readonly articlesRepository: ArticlesRepository,\n    private readonly locale: Locale\n  ) {}\n\n  public async execute(): Promise<Article[]> {\n    const articles = await this.articlesRepository.findAllByLocale(this.locale)\n    return articles.slice().sort((articleA, articleB) => (articleB.date < articleA.date ? -1 : 1))\n  }\n\n  public static create(context: { locale: Locale }) {\n    return UseCaseDecorator.create().decorate(\n      new GetAllArticles(ArticlesFileRepository.create(), context.locale)\n    )\n  }\n}\n","export { GetTalksGiven } from './GetTalksGiven'\nexport { GetArticle } from './GetArticle'\nexport { GetAllArticles } from './GetAllArticles'\n","module.exports = { \n    body: \"Use cases and commands. How to.\\n\\n<!--more-->\\n\\nThe [command pattern](https://sourcemaking.com/design_patterns/command) helps us encapsulate requests in order to perform certain operations, like logging, queuing and filtering.\\n\\nWe start with the interface:\\n\\n```typescript\\nexport interface Command<T> {\\n    execute(): Promise<T>\\n}\\n```\\n\\nAnd then we can look at a specific command, for example the one used to retrieve this article:\\n\\n```typescript\\nimport { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command<Article> {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise<Article> {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return new GetArticle(\\n            new ArticlesFileRepository(\\n                FileLoader.create(),\\n                TranslationService.create(Translator.create())\\n            ),\\n            context.id,\\n            context.locale\\n        )\\n    }\\n}\\n```\\n\\nThis command is responsible for obtaining a certain article using a [repository](http://shawnmc.cool/the-repository-pattern), where and how do we get this data we neither know nor care, that's responsibility of another class.\\n\\nThis command represents a [Use Case](https://en.wikipedia.org/wiki/Use_case) of my application. Right now it only needs to get the article from the repository but in the feature it could handle if a user has read the article, or if the user is a PRO user and then can read all articles instead of a subset of articles or anything we'd like.\\n\\nWho builds the command? Whoever uses it:\\n\\n```typescript\\nconst article = await GetArticle.create({\\n    id: 'use-cases-and-commands',\\n    locale: Locale.EN\\n}).execute()\\n```\\n\\nI'm using [inversion of control](https://en.wikipedia.org/wiki/Inversion_of_control) to provide the dependencies needed for the GetArticle use case to work. In this case I'm going from an abstraction (ArticlesRepository) to a concreation (ArticlesFileRepository). If tomorrow I decide to serve the articles via API I would only need to change the factory.\\n\\nWhat is also interesting about commands is that they are easily augmented. For example we can log when a command is executed without touching any commands using the [Decorator Pattern](https://sourcemaking.com/design_patterns/decorator):\\n\\n```typescript\\nimport { Command } from './Command'\\nimport { Logger } from './Logger'\\n\\nexport class LoggerCommandDecorator<T> implements Command<T> {\\n    public constructor(\\n        private readonly decoratedCommand: Command<T>,\\n        private readonly logger: Logger\\n    ) {}\\n\\n    public execute(): Promise<T> {\\n        this.logger.log(\\n            (this.decoratedCommand as Object).constructor.name +\\n                ' - ' +\\n                Object.getOwnPropertyNames(this.decoratedCommand)\\n        )\\n        return this.decoratedCommand.execute()\\n    }\\n}\\n```\\n\\nThen, using a `UserCaseDecorator` I specify which decorators I want for **all my use cases**:\\n\\n```typescript\\nimport { Command } from '../../infraestructure/Command'\\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\\nimport { Logger } from '../../infraestructure/Logger'\\n\\nexport class UseCaseDecorator {\\n    private static readonly logger = Logger.create({\\n        // eslint-disable-next-line\\n        stdout: { error: console.error, info: console.log, warn: console.warn }\\n    })\\n\\n    public static decorate<T>(command: Command<T>) {\\n        return new LoggerCommandDecorator<T>(command, UseCaseDecorator.logger)\\n    }\\n}\\n```\\n\\nAnd then in each use case we use the `UseCaseDecorator` like so:\\n\\n```typescript\\nimport { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { UseCaseDecorator } from './UseCaseDecorator'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command<Article> {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise<Article> {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return UseCaseDecorator.decorate(\\n            new GetArticle(\\n                new ArticlesFileRepository(\\n                    FileLoader.create(),\\n                    TranslationService.create(Translator.create())\\n                ),\\n                context.id,\\n                context.locale\\n            )\\n        )\\n    }\\n}\\n```\\n\\nAnd we could create as many decorators as we want and use composition to give more behaviour to our commands.\\n\",\n    html: \"<p>Use cases and commands. How to.</p>\\n<!--more-->\\n<p>The <a href=\\\"https://sourcemaking.com/design_patterns/command\\\">command pattern</a> helps us encapsulate requests in order to perform certain operations, like logging, queuing and filtering.</p>\\n<p>We start with the interface:</p>\\n<pre><code class=\\\"language-typescript\\\">export interface Command&lt;T&gt; {\\n    execute(): Promise&lt;T&gt;\\n}\\n</code></pre>\\n<p>And then we can look at a specific command, for example the one used to retrieve this article:</p>\\n<pre><code class=\\\"language-typescript\\\">import { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command&lt;Article&gt; {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise&lt;Article&gt; {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return new GetArticle(\\n            new ArticlesFileRepository(\\n                FileLoader.create(),\\n                TranslationService.create(Translator.create())\\n            ),\\n            context.id,\\n            context.locale\\n        )\\n    }\\n}\\n</code></pre>\\n<p>This command is responsible for obtaining a certain article using a <a href=\\\"http://shawnmc.cool/the-repository-pattern\\\">repository</a>, where and how do we get this data we neither know nor care, that's responsibility of another class.</p>\\n<p>This command represents a <a href=\\\"https://en.wikipedia.org/wiki/Use_case\\\">Use Case</a> of my application. Right now it only needs to get the article from the repository but in the feature it could handle if a user has read the article, or if the user is a PRO user and then can read all articles instead of a subset of articles or anything we'd like.</p>\\n<p>Who builds the command? Whoever uses it:</p>\\n<pre><code class=\\\"language-typescript\\\">const article = await GetArticle.create({\\n    id: 'use-cases-and-commands',\\n    locale: Locale.EN\\n}).execute()\\n</code></pre>\\n<p>I'm using <a href=\\\"https://en.wikipedia.org/wiki/Inversion_of_control\\\">inversion of control</a> to provide the dependencies needed for the GetArticle use case to work. In this case I'm going from an abstraction (ArticlesRepository) to a concreation (ArticlesFileRepository). If tomorrow I decide to serve the articles via API I would only need to change the factory.</p>\\n<p>What is also interesting about commands is that they are easily augmented. For example we can log when a command is executed without touching any commands using the <a href=\\\"https://sourcemaking.com/design_patterns/decorator\\\">Decorator Pattern</a>:</p>\\n<pre><code class=\\\"language-typescript\\\">import { Command } from './Command'\\nimport { Logger } from './Logger'\\n\\nexport class LoggerCommandDecorator&lt;T&gt; implements Command&lt;T&gt; {\\n    public constructor(\\n        private readonly decoratedCommand: Command&lt;T&gt;,\\n        private readonly logger: Logger\\n    ) {}\\n\\n    public execute(): Promise&lt;T&gt; {\\n        this.logger.log(\\n            (this.decoratedCommand as Object).constructor.name +\\n                ' - ' +\\n                Object.getOwnPropertyNames(this.decoratedCommand)\\n        )\\n        return this.decoratedCommand.execute()\\n    }\\n}\\n</code></pre>\\n<p>Then, using a <code>UserCaseDecorator</code> I specify which decorators I want for <strong>all my use cases</strong>:</p>\\n<pre><code class=\\\"language-typescript\\\">import { Command } from '../../infraestructure/Command'\\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\\nimport { Logger } from '../../infraestructure/Logger'\\n\\nexport class UseCaseDecorator {\\n    private static readonly logger = Logger.create({\\n        // eslint-disable-next-line\\n        stdout: { error: console.error, info: console.log, warn: console.warn }\\n    })\\n\\n    public static decorate&lt;T&gt;(command: Command&lt;T&gt;) {\\n        return new LoggerCommandDecorator&lt;T&gt;(command, UseCaseDecorator.logger)\\n    }\\n}\\n</code></pre>\\n<p>And then in each use case we use the <code>UseCaseDecorator</code> like so:</p>\\n<pre><code class=\\\"language-typescript\\\">import { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { UseCaseDecorator } from './UseCaseDecorator'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command&lt;Article&gt; {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise&lt;Article&gt; {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return UseCaseDecorator.decorate(\\n            new GetArticle(\\n                new ArticlesFileRepository(\\n                    FileLoader.create(),\\n                    TranslationService.create(Translator.create())\\n                ),\\n                context.id,\\n                context.locale\\n            )\\n        )\\n    }\\n}\\n</code></pre>\\n<p>And we could create as many decorators as we want and use composition to give more behaviour to our commands.</p>\\n\",\n    attributes: {\"title\":\"Use Cases and Command Pattern\",\"date\":\"2019-04-17T00:00:00.000Z\",\"locale\":\"en\",\"image\":\"abstract-dark-design.jpg\"},\n      vue: {\n        render: \"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }\",\n        staticRenderFns: \"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"dynamicContent\\\"},[_c('p',[_vm._v(\\\"Use cases and commands. How to.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"The \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://sourcemaking.com/design_patterns/command\\\"}},[_vm._v(\\\"command pattern\\\")]),_vm._v(\\\" helps us encapsulate requests in order to perform certain operations, like logging, queuing and filtering.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"We start with the interface:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"export interface Command<T> {\\\\n    execute(): Promise<T>\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"And then we can look at a specific command, for example the one used to retrieve this article:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"import { Command } from '../../infraestructure/Command'\\\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\\\nimport { Id } from '../../domain'\\\\nimport { Locale, Translator } from '../../domain/language'\\\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\\\nimport { TranslationService } from '../../domain/TranslationService'\\\\n\\\\nexport class GetArticle implements Command<Article> {\\\\n    private constructor(\\\\n        private readonly articlesRepository: ArticlesRepository,\\\\n        private readonly id: Id,\\\\n        private readonly locale: Locale\\\\n    ) {}\\\\n\\\\n    public async execute(): Promise<Article> {\\\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\\\n    }\\\\n\\\\n    public static create(context: { id: Id; locale: Locale }) {\\\\n        return new GetArticle(\\\\n            new ArticlesFileRepository(\\\\n                FileLoader.create(),\\\\n                TranslationService.create(Translator.create())\\\\n            ),\\\\n            context.id,\\\\n            context.locale\\\\n        )\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"This command is responsible for obtaining a certain article using a \\\"),_c('a',{attrs:{\\\"href\\\":\\\"http://shawnmc.cool/the-repository-pattern\\\"}},[_vm._v(\\\"repository\\\")]),_vm._v(\\\", where and how do we get this data we neither know nor care, that's responsibility of another class.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"This command represents a \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://en.wikipedia.org/wiki/Use_case\\\"}},[_vm._v(\\\"Use Case\\\")]),_vm._v(\\\" of my application. Right now it only needs to get the article from the repository but in the feature it could handle if a user has read the article, or if the user is a PRO user and then can read all articles instead of a subset of articles or anything we'd like.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Who builds the command? Whoever uses it:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"const article = await GetArticle.create({\\\\n    id: 'use-cases-and-commands',\\\\n    locale: Locale.EN\\\\n}).execute()\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"I'm using \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://en.wikipedia.org/wiki/Inversion_of_control\\\"}},[_vm._v(\\\"inversion of control\\\")]),_vm._v(\\\" to provide the dependencies needed for the GetArticle use case to work. In this case I'm going from an abstraction (ArticlesRepository) to a concreation (ArticlesFileRepository). If tomorrow I decide to serve the articles via API I would only need to change the factory.\\\")]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"What is also interesting about commands is that they are easily augmented. For example we can log when a command is executed without touching any commands using the \\\"),_c('a',{attrs:{\\\"href\\\":\\\"https://sourcemaking.com/design_patterns/decorator\\\"}},[_vm._v(\\\"Decorator Pattern\\\")]),_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"import { Command } from './Command'\\\\nimport { Logger } from './Logger'\\\\n\\\\nexport class LoggerCommandDecorator<T> implements Command<T> {\\\\n    public constructor(\\\\n        private readonly decoratedCommand: Command<T>,\\\\n        private readonly logger: Logger\\\\n    ) {}\\\\n\\\\n    public execute(): Promise<T> {\\\\n        this.logger.log(\\\\n            (this.decoratedCommand as Object).constructor.name +\\\\n                ' - ' +\\\\n                Object.getOwnPropertyNames(this.decoratedCommand)\\\\n        )\\\\n        return this.decoratedCommand.execute()\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"Then, using a \\\"),_c('code',{pre:true},[_vm._v(\\\"UserCaseDecorator\\\")]),_vm._v(\\\" I specify which decorators I want for \\\"),_c('strong',[_vm._v(\\\"all my use cases\\\")]),_vm._v(\\\":\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"import { Command } from '../../infraestructure/Command'\\\\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\\\\nimport { Logger } from '../../infraestructure/Logger'\\\\n\\\\nexport class UseCaseDecorator {\\\\n    private static readonly logger = Logger.create({\\\\n        // eslint-disable-next-line\\\\n        stdout: { error: console.error, info: console.log, warn: console.warn }\\\\n    })\\\\n\\\\n    public static decorate<T>(command: Command<T>) {\\\\n        return new LoggerCommandDecorator<T>(command, UseCaseDecorator.logger)\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"And then in each use case we use the \\\"),_c('code',{pre:true},[_vm._v(\\\"UseCaseDecorator\\\")]),_vm._v(\\\" like so:\\\")]),_vm._v(\\\" \\\"),_c('pre',[_c('code',{pre:true,attrs:{\\\"class\\\":\\\"language-typescript\\\"}},[_vm._v(\\\"import { Command } from '../../infraestructure/Command'\\\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\\\nimport { Id } from '../../domain'\\\\nimport { Locale, Translator } from '../../domain/language'\\\\nimport { UseCaseDecorator } from './UseCaseDecorator'\\\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\\\nimport { TranslationService } from '../../domain/TranslationService'\\\\n\\\\nexport class GetArticle implements Command<Article> {\\\\n    private constructor(\\\\n        private readonly articlesRepository: ArticlesRepository,\\\\n        private readonly id: Id,\\\\n        private readonly locale: Locale\\\\n    ) {}\\\\n\\\\n    public async execute(): Promise<Article> {\\\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\\\n    }\\\\n\\\\n    public static create(context: { id: Id; locale: Locale }) {\\\\n        return UseCaseDecorator.decorate(\\\\n            new GetArticle(\\\\n                new ArticlesFileRepository(\\\\n                    FileLoader.create(),\\\\n                    TranslationService.create(Translator.create())\\\\n                ),\\\\n                context.id,\\\\n                context.locale\\\\n            )\\\\n        )\\\\n    }\\\\n}\\\\n\\\")])]),_vm._v(\\\" \\\"),_c('p',[_vm._v(\\\"And we could create as many decorators as we want and use composition to give more behaviour to our commands.\\\")])]) }]\",\n        component: {\n          data: function () {\n            return {\n              templateRender: null\n            }\n          },\n          render: function (createElement) {\n            return this.templateRender ? this.templateRender() : createElement(\"div\", \"Rendering\");\n          },\n          created: function () {\n            this.templateRender = function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) };\n            this.$options.staticRenderFns = [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dynamicContent\"},[_c('p',[_vm._v(\"Use cases and commands. How to.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"The \"),_c('a',{attrs:{\"href\":\"https://sourcemaking.com/design_patterns/command\"}},[_vm._v(\"command pattern\")]),_vm._v(\" helps us encapsulate requests in order to perform certain operations, like logging, queuing and filtering.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"We start with the interface:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"export interface Command<T> {\\n    execute(): Promise<T>\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"And then we can look at a specific command, for example the one used to retrieve this article:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"import { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command<Article> {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise<Article> {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return new GetArticle(\\n            new ArticlesFileRepository(\\n                FileLoader.create(),\\n                TranslationService.create(Translator.create())\\n            ),\\n            context.id,\\n            context.locale\\n        )\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"This command is responsible for obtaining a certain article using a \"),_c('a',{attrs:{\"href\":\"http://shawnmc.cool/the-repository-pattern\"}},[_vm._v(\"repository\")]),_vm._v(\", where and how do we get this data we neither know nor care, that's responsibility of another class.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"This command represents a \"),_c('a',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Use_case\"}},[_vm._v(\"Use Case\")]),_vm._v(\" of my application. Right now it only needs to get the article from the repository but in the feature it could handle if a user has read the article, or if the user is a PRO user and then can read all articles instead of a subset of articles or anything we'd like.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Who builds the command? Whoever uses it:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"const article = await GetArticle.create({\\n    id: 'use-cases-and-commands',\\n    locale: Locale.EN\\n}).execute()\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"I'm using \"),_c('a',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Inversion_of_control\"}},[_vm._v(\"inversion of control\")]),_vm._v(\" to provide the dependencies needed for the GetArticle use case to work. In this case I'm going from an abstraction (ArticlesRepository) to a concreation (ArticlesFileRepository). If tomorrow I decide to serve the articles via API I would only need to change the factory.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"What is also interesting about commands is that they are easily augmented. For example we can log when a command is executed without touching any commands using the \"),_c('a',{attrs:{\"href\":\"https://sourcemaking.com/design_patterns/decorator\"}},[_vm._v(\"Decorator Pattern\")]),_vm._v(\":\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"import { Command } from './Command'\\nimport { Logger } from './Logger'\\n\\nexport class LoggerCommandDecorator<T> implements Command<T> {\\n    public constructor(\\n        private readonly decoratedCommand: Command<T>,\\n        private readonly logger: Logger\\n    ) {}\\n\\n    public execute(): Promise<T> {\\n        this.logger.log(\\n            (this.decoratedCommand as Object).constructor.name +\\n                ' - ' +\\n                Object.getOwnPropertyNames(this.decoratedCommand)\\n        )\\n        return this.decoratedCommand.execute()\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Then, using a \"),_c('code',{pre:true},[_vm._v(\"UserCaseDecorator\")]),_vm._v(\" I specify which decorators I want for \"),_c('strong',[_vm._v(\"all my use cases\")]),_vm._v(\":\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"import { Command } from '../../infraestructure/Command'\\nimport { LoggerCommandDecorator } from '../../infraestructure/LoggerCommandDecorator'\\nimport { Logger } from '../../infraestructure/Logger'\\n\\nexport class UseCaseDecorator {\\n    private static readonly logger = Logger.create({\\n        // eslint-disable-next-line\\n        stdout: { error: console.error, info: console.log, warn: console.warn }\\n    })\\n\\n    public static decorate<T>(command: Command<T>) {\\n        return new LoggerCommandDecorator<T>(command, UseCaseDecorator.logger)\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"And then in each use case we use the \"),_c('code',{pre:true},[_vm._v(\"UseCaseDecorator\")]),_vm._v(\" like so:\")]),_vm._v(\" \"),_c('pre',[_c('code',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_vm._v(\"import { Command } from '../../infraestructure/Command'\\nimport { Article, ArticlesRepository } from '../../domain/articles'\\nimport { Id } from '../../domain'\\nimport { Locale, Translator } from '../../domain/language'\\nimport { UseCaseDecorator } from './UseCaseDecorator'\\nimport { ArticlesFileRepository } from '../../infraestructure/articles/ArticlesFileRepository'\\nimport { FileLoader } from '../../infraestructure/FileLoader'\\nimport { TranslationService } from '../../domain/TranslationService'\\n\\nexport class GetArticle implements Command<Article> {\\n    private constructor(\\n        private readonly articlesRepository: ArticlesRepository,\\n        private readonly id: Id,\\n        private readonly locale: Locale\\n    ) {}\\n\\n    public async execute(): Promise<Article> {\\n        return this.articlesRepository.findOneByLocale(this.id, this.locale)\\n    }\\n\\n    public static create(context: { id: Id; locale: Locale }) {\\n        return UseCaseDecorator.decorate(\\n            new GetArticle(\\n                new ArticlesFileRepository(\\n                    FileLoader.create(),\\n                    TranslationService.create(Translator.create())\\n                ),\\n                context.id,\\n                context.locale\\n            )\\n        )\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"And we could create as many decorators as we want and use composition to give more behaviour to our commands.\")])]) }];\n          }\n        }\n      }\n     }","module.exports = { \n    body: \"The frontend world has always been known by its **volatile nature**, however we don't make any effort to abstract ourselves from all that. We should build **robust** and **long-lived** software. In this talk we'll see how to tackle common problems in the frontend world using **TypeScript**, **React** and several **design patterns**. We'll see how we'll make our software _open to change_ while not trying to _guess the future_. Also, we'll appreciate how following the **SOLID principles** of our app will be very easy to test and change. Are you ready for this journey on _beautiful_ software?\\n\",\n    html: \"<p>The frontend world has always been known by its <strong>volatile nature</strong>, however we don't make any effort to abstract ourselves from all that. We should build <strong>robust</strong> and <strong>long-lived</strong> software. In this talk we'll see how to tackle common problems in the frontend world using <strong>TypeScript</strong>, <strong>React</strong> and several <strong>design patterns</strong>. We'll see how we'll make our software <em>open to change</em> while not trying to <em>guess the future</em>. Also, we'll appreciate how following the <strong>SOLID principles</strong> of our app will be very easy to test and change. Are you ready for this journey on <em>beautiful</em> software?</p>\\n\",\n    attributes: {\"title\":\"How To Make Beautiful Software Again: Frontend Design Patterns\",\"length\":40,\"difficulty\":\"Advanced\",\"language\":\"en\",\"topics\":[\"Proxies\",\"JavaScript\"]},\n      vue: {\n        render: \"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }\",\n        staticRenderFns: \"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"dynamicContent\\\"},[_c('p',[_vm._v(\\\"The frontend world has always been known by its \\\"),_c('strong',[_vm._v(\\\"volatile nature\\\")]),_vm._v(\\\", however we don't make any effort to abstract ourselves from all that. We should build \\\"),_c('strong',[_vm._v(\\\"robust\\\")]),_vm._v(\\\" and \\\"),_c('strong',[_vm._v(\\\"long-lived\\\")]),_vm._v(\\\" software. In this talk we'll see how to tackle common problems in the frontend world using \\\"),_c('strong',[_vm._v(\\\"TypeScript\\\")]),_vm._v(\\\", \\\"),_c('strong',[_vm._v(\\\"React\\\")]),_vm._v(\\\" and several \\\"),_c('strong',[_vm._v(\\\"design patterns\\\")]),_vm._v(\\\". We'll see how we'll make our software \\\"),_c('em',[_vm._v(\\\"open to change\\\")]),_vm._v(\\\" while not trying to \\\"),_c('em',[_vm._v(\\\"guess the future\\\")]),_vm._v(\\\". Also, we'll appreciate how following the \\\"),_c('strong',[_vm._v(\\\"SOLID principles\\\")]),_vm._v(\\\" of our app will be very easy to test and change. Are you ready for this journey on \\\"),_c('em',[_vm._v(\\\"beautiful\\\")]),_vm._v(\\\" software?\\\")])]) }]\",\n        component: {\n          data: function () {\n            return {\n              templateRender: null\n            }\n          },\n          render: function (createElement) {\n            return this.templateRender ? this.templateRender() : createElement(\"div\", \"Rendering\");\n          },\n          created: function () {\n            this.templateRender = function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) };\n            this.$options.staticRenderFns = [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dynamicContent\"},[_c('p',[_vm._v(\"The frontend world has always been known by its \"),_c('strong',[_vm._v(\"volatile nature\")]),_vm._v(\", however we don't make any effort to abstract ourselves from all that. We should build \"),_c('strong',[_vm._v(\"robust\")]),_vm._v(\" and \"),_c('strong',[_vm._v(\"long-lived\")]),_vm._v(\" software. In this talk we'll see how to tackle common problems in the frontend world using \"),_c('strong',[_vm._v(\"TypeScript\")]),_vm._v(\", \"),_c('strong',[_vm._v(\"React\")]),_vm._v(\" and several \"),_c('strong',[_vm._v(\"design patterns\")]),_vm._v(\". We'll see how we'll make our software \"),_c('em',[_vm._v(\"open to change\")]),_vm._v(\" while not trying to \"),_c('em',[_vm._v(\"guess the future\")]),_vm._v(\". Also, we'll appreciate how following the \"),_c('strong',[_vm._v(\"SOLID principles\")]),_vm._v(\" of our app will be very easy to test and change. Are you ready for this journey on \"),_c('em',[_vm._v(\"beautiful\")]),_vm._v(\" software?\")])]) }];\n          }\n        }\n      }\n     }","module.exports = require(\"core-js/library/fn/array/is-array\");","var map = {\n\t\"./theming.md\": \"7c7a\",\n\t\"./use-cases-and-commands.md\": \"9818\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"a78d\";","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","module.exports = { \n    body: \"When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of **design patterns** applied to JavaScript, looking through some of the cutting edge properties of ES6 such as **Proxies** and **default function parameter expressions**, dealing with **objects** and even some examples of **functional programming**. This talk is not allowed for cardiacs.\\n\",\n    html: \"<p>When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of <strong>design patterns</strong> applied to JavaScript, looking through some of the cutting edge properties of ES6 such as <strong>Proxies</strong> and <strong>default function parameter expressions</strong>, dealing with <strong>objects</strong> and even some examples of <strong>functional programming</strong>. This talk is not allowed for cardiacs.</p>\\n\",\n    attributes: {\"title\":\"Advanced JavaScript Patterns\",\"length\":45,\"difficulty\":\"Advanced\",\"language\":\"es\",\"topics\":[\"Proxies\",\"JavaScript\"],\"events\":[{\"name\":\"JSDay Canarias\",\"date\":\"2019-09-25T00:00:00.000Z\"}]},\n      vue: {\n        render: \"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }\",\n        staticRenderFns: \"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"dynamicContent\\\"},[_c('p',[_vm._v(\\\"When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of \\\"),_c('strong',[_vm._v(\\\"design patterns\\\")]),_vm._v(\\\" applied to JavaScript, looking through some of the cutting edge properties of ES6 such as \\\"),_c('strong',[_vm._v(\\\"Proxies\\\")]),_vm._v(\\\" and \\\"),_c('strong',[_vm._v(\\\"default function parameter expressions\\\")]),_vm._v(\\\", dealing with \\\"),_c('strong',[_vm._v(\\\"objects\\\")]),_vm._v(\\\" and even some examples of \\\"),_c('strong',[_vm._v(\\\"functional programming\\\")]),_vm._v(\\\". This talk is not allowed for cardiacs.\\\")])]) }]\",\n        component: {\n          data: function () {\n            return {\n              templateRender: null\n            }\n          },\n          render: function (createElement) {\n            return this.templateRender ? this.templateRender() : createElement(\"div\", \"Rendering\");\n          },\n          created: function () {\n            this.templateRender = function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) };\n            this.$options.staticRenderFns = [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dynamicContent\"},[_c('p',[_vm._v(\"When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of \"),_c('strong',[_vm._v(\"design patterns\")]),_vm._v(\" applied to JavaScript, looking through some of the cutting edge properties of ES6 such as \"),_c('strong',[_vm._v(\"Proxies\")]),_vm._v(\" and \"),_c('strong',[_vm._v(\"default function parameter expressions\")]),_vm._v(\", dealing with \"),_c('strong',[_vm._v(\"objects\")]),_vm._v(\" and even some examples of \"),_c('strong',[_vm._v(\"functional programming\")]),_vm._v(\". This talk is not allowed for cardiacs.\")])]) }];\n          }\n        }\n      }\n     }","var map = {\n\t\"./en/theming.md\": [\n\t\t\"7c7a\"\n\t],\n\t\"./en/use-cases-and-commands.md\": [\n\t\t\"9818\"\n\t],\n\t\"./es/use-cases-and-commands.md\": [\n\t\t\"391e\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"b979\";\nmodule.exports = webpackAsyncContext;","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","export enum Difficulty {\n  EASY,\n  INTERMEDIATE,\n  ADVANCED\n}\n","module.exports = require(\"core-js/library/fn/is-iterable\");","var map = {\n\t\"./advanced-javascript-patterns.md\": \"892f\",\n\t\"./how-to-make-beautiful-software.md\": \"a467\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"cd3d\";","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n"],"sourceRoot":""}